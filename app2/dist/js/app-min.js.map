{"version":3,"sources":["app.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","inc/footer.html","inc/footer2.html","inc/footer3.html","inc/header.html","2","App","routesCnf","appCnf","httpClientCnf","Ctrls","app","conf","const","freeze","system","controller","routes","run","../../sys/App","./conf/appCnf","./conf/httpClientCnf","./conf/routesCnf","./controllers","3","baseURL","4","encodeURI","timeout","retry","retryDelay","maxRedirects","headers","authorization","accept","content-type","5","6","Controller","Form","Load","Util","[object Object]","super","this","load","sys","util","userForm","trx","view","dataRgs","console","log","setControl","sleep","fullName","getControl","delControl","age","country","family","jobs","pet","setControls","../../../sys","7","httpClient","controllers","cookie","Cookie","domain","path","expires","secure","httpOnly","sameSite","ifX","cookieForm","product","name","x","colors","rgPrint","limit","skip","companies","size","elem","event","rgIf","rgFor","num","rgRepeat","rgSet","myKlases","rgClass","fontSize","color","myStajl","rgStyle","myColorArr","rgSwitch","toggle","rgelems","myElem","style","evt","boja","mySelect","ifs","one","two","three","ifOne","ifTwo","ifThree","cookieVal1","cookieVal2","cookieMethod","put","putObject","y","getAll","get","getObject","remove","removeAll","empty","exists","str","rest","callAPI","backgroundColor","answer","askOnce","window","history","8","error","uri","9","$","text","10","11","IndexCtrl","Page1Ctrl","Page2Ctrl","FormCtrl","NotfoundCtrl","./FormCtrl","./IndexCtrl","./NotfoundCtrl","./Page1Ctrl","./Page2Ctrl","12","Router","routerOpts","routeDefs","obj","Object","defineProperty","value","writable","body","uriParsed","_uriParser","_trx","route","funcs","push","routeParsed","_routeParser","fromRoute","toRoute","toRouteDef","find","routeDef","toFuncs","def","routeDef_found","_routeRegexMatchNoParams","_routeWithParamsMatch","routeDef_notfound","routeDef_do","query","queryObject","params","_getParams","full","func","tf1","RegExp","test","tf2","segments","tf","debug","base","tf3","trim","replace","isNaN","indexOf","parseInt","parseFloat","JSON","parse","err","isJSON","queryString","queryArr","split","eqParts","property","forEach","_typeConvertor","uriDivided","_removeSlashes","_toQueryObject","routeParsedFull","uriParsedPath","routeParts","uriParts","routePart","index","regochRouter","13","eventEmitter","HTTPClient","Parse","router","CONF","CONST","requiredFields","fields","keys","requiredField","Ctrl","routeCnf","cmd","ctrlName","ctrl","when","notFound","use","./Cookie","./Form","./HTTPClient","./Load","./Parse","./eventEmitter","./router","./util","14","parseListeners","parseNonListeners","rgHref","rgClick","rgChange","rgEvt","rgElem","document","addEventListener","readyState","onload","15","cookieOpts","cookieStr","encodeURIComponent","_appendCookieOptions","valueObj","stringify","allCookies","cookiesArr","_toCookiesArr","elemArr","cookieVal","decodeURIComponent","cookieObj","cookieJson","dateOld","Date","toUTCString","cookiesArr2","cookieExists","d","setTime","getTime","map","cookiesPair","16","formName","key","val","elems","querySelectorAll","type","checked","options","option","selected","valArr","opts","selectedOptions","opt","valueAsNumber","tip","background","./debug","17","url","protocol","hostname","port","pathname","xhr","XMLHttpRequest","_correctUrl","urlObj","URL","search","status","message","original","toISOString","start","end","ds","method","body_obj","requestURL","requestMethod","statusMessage","https","req","payload","undefined","res","content","time","_getTime","duration","_parseUrl","ans","_getTimeDiff","open","prop","setRequestHeader","body_str","send","Promise","resolve","reject","target","response","statusText","getResHeaders","onerror","kill","_formatError","ontimeout","answers","redirectCounter","url_new","location","retryCounter","setTimeout","setHeaders","cssSel","frag","createRange","createContextualFragment","dom","querySelector","outerHTML","childNodes","node","nodeType","data","abort","headerObj","assign","headerName","headerValue","headerNames","headersArr","getAllResponseHeaders","headersObj","headerFull","splited","18","viewsCompiled","hc","viewName","viewPath","dest","attrSel","loadView","contentStr","contentDOM","doc","DOMParser","parseFromString","toString","askHTML","innerHTML","parent","parentNode","sibling","nextSibling","isEqualNode","replaceWith","insertBefore","firstChild","emptyNode","createTextNode","prepend","lastChild","append","../app/dist/views/compiled.json","19","separator","temp","promises","dataRg","removeEventListener","eventName","handler","attrName","all","async","preventDefault","destroy","rgKILL","href","getAttribute","state","title","pushState","emit","localName","matched","match","funcName","funcArgs","_getFuncArgs","constructor","attrVal","directives","directive","attrValSplited","bindTo","propSplitted","attrvalueProp","attrDef","_getControllerValue","tempVarName","act","textNode","controllerProp","ctrlProp","removeAttribute","classList","add","valObj","styleProps","styleProp","attrvalue","_uncommentAll","setAttribute","visibility","_commentElement","isMultiple","switchcaseElems","switchdefaultElem","isMatched","switchcaseElem","switchcaseAttrVal","propLimSkpSplited","limitName","skipName","max","genElems","genElem","j","_parse$i","newElem","cloneNode","id","txt","$1","$2","result","Math","pow","args","arg","comment","createComment","ifParentElems","parser","ifParentElem","child","elemStr","nodeValue","20","debugOpts","21","detail","CustomEvent","dispatchEvent","listener","once","22","./App","./Controller","23","RegochRouter","prerender","bind","render","postrender","init","notfound","exe","catch","testRoutes","on","regoch-router","24","ms"],"mappings":"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","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\nmodule.exports={\n  \"inc/footer.html\": \"<div id=\\\"footer\\\"><p>This is the first footer.</p><span data-rg-view=\\\"footer2\\\">--- load footer2 ---</span></div>\",\n  \"inc/footer2.html\": \"<b>Bold footer2.</b> My tekst. <span data-rg-view=\\\"footer3\\\">--- load footer3 ---</span>\",\n  \"inc/footer3.html\": \"<br><i>This is italic footer3.</i> <span style=\\\"color:red\\\">The red tekst.</span>\",\n  \"inc/header.html\": \"<h2>HEADER <small>little boy</small> <b>boldy</b></h2><p>Header txt.</p>\"\n}\n},{}],2:[function(require,module,exports){\nconst App = require('../../sys/App');\n\nconst routesCnf = require('./conf/routesCnf');\nconst appCnf = require('./conf/appCnf');\nconst httpClientCnf = require('./conf/httpClientCnf');\n\nconst Ctrls = require('./controllers');\n\n\n\nconst app = new App();\napp\n  .conf('app', appCnf)\n  .conf('httpClient', httpClientCnf)\n  .const('myNum', 10)\n  .const('myStr', 'some thing')\n  .const('myObj', {a: 22})\n  .freeze();\napp.system(httpClientCnf);\napp\n  .controller(Ctrls)\n  .routes(routesCnf)\n  .run();\n\n\n\n\n},{\"../../sys/App\":13,\"./conf/appCnf\":3,\"./conf/httpClientCnf\":4,\"./conf/routesCnf\":5,\"./controllers\":11}],3:[function(require,module,exports){\nmodule.exports = {\n  baseURL: 'http://localhost:4400'\n};\n\n},{}],4:[function(require,module,exports){\nmodule.exports = {\n  encodeURI: true,\n  timeout: 10000,\n  retry: 5,\n  retryDelay: 1300,\n  maxRedirects: 0,\n  headers: {\n    'authorization': '',\n    'accept': '*/*', // 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9'\n    'content-type': 'text/html; charset=UTF-8'\n  }\n};\n\n},{}],5:[function(require,module,exports){\n// route definitions\nmodule.exports = [\n  ['when', '/', 'IndexCtrl'],\n  ['when', '/page1', 'Page1Ctrl'],\n  ['when', '/page/:pageNum', 'Page2Ctrl'],\n  ['when', '/form', 'FormCtrl'],\n  ['notFound', 'NotfoundCtrl'],\n];\n\n},{}],6:[function(require,module,exports){\nconst { Controller, Form, Load, Util } = require('../../../sys');\n\n\n\nclass FormCtrl extends Controller {\n\n  constructor(app) {\n    super();\n    this.load = app.sys.load;\n    this.util = app.sys.util;\n    this.userForm = new app.sys.Form('userF');\n  }\n\n  async prerender(trx) {\n    await this.load.view('home1', 'form.html');\n  }\n\n\n  async init(trx, dataRgs) {\n    console.log('FORM init', trx, dataRgs);\n  }\n\n\n\n  async setFullName() {\n    this.userForm.setControl('fullName', 'John');\n\n    await this.util.sleep(1300);\n    this.userForm.setControl('fullName', 'Johnny');\n\n    await this.util.sleep(800);\n    const fullName = this.userForm.getControl('fullName');\n    console.log('fullName::', fullName);\n\n    await this.util.sleep(800);\n    this.userForm.delControl('fullName');\n  }\n  async getFullName() {\n    const fullName = this.userForm.getControl('fullName');\n    console.log('fullName::', fullName);\n  }\n\n\n  async setAge() {\n    this.userForm.setControl('age', 23);\n  }\n  async getAge() {\n    const age = this.userForm.getControl('age');\n    console.log('age::', typeof age, age);\n  }\n\n  async setCountry() {\n    this.userForm.setControl('country', 'Croatia');\n    await this.util.sleep(1300);\n    this.userForm.setControl('country', 'UK');\n    await this.util.sleep(1300);\n    this.userForm.delControl('country');\n  }\n  async getCountry() {\n    const country = this.userForm.getControl('country');\n    console.log('country::', country);\n  }\n\n  async setFamily() {\n    this.userForm.setControl('family', ['Betty', 'Lara']);\n  }\n  async getFamily() {\n    const family = this.userForm.getControl('family');\n    console.log('family::', family);\n  }\n  async emptyFamily() {\n    this.userForm.delControl('family');\n  }\n\n  async setJobs() {\n    this.userForm.setControl('jobs', ['IT', 'Marketing']);\n  }\n  async getJobs() {\n    const jobs = this.userForm.getControl('jobs');\n    console.log('selected jobs::', jobs);\n  }\n  async emptyJobs() {\n    this.userForm.delControl('jobs');\n  }\n\n  async setPet() {\n    this.userForm.setControl('pet', 'cat');\n  }\n  async getPet() {\n    const pet = this.userForm.getControl('pet');\n    console.log('selected pet::', pet);\n  }\n  async emptyPet() {\n    this.userForm.delControl('pet');\n  }\n\n\n\n  async setAll() {\n    this.userForm.setControls({\n      fullName: 'John Doe',\n      age: 48,\n      country: 'Kenya'\n    });\n  }\n\n\n\n\n}\n\n\nmodule.exports = FormCtrl;\n\n},{\"../../../sys\":22}],7:[function(require,module,exports){\nconst { Controller } = require('../../../sys');\n\n\nclass IndexCtrl extends Controller {\n\n  constructor(app) {\n    super();\n    console.log('HOME constructor');\n    this.load = app.sys.load;\n    this.util = app.sys.util;\n    this.httpClient = app.sys.httpClient; // or new app.sys.HTTPClient()\n    this.controllers = app.controllers;\n\n    const cookieOpts = {\n      domain: 'localhost',\n      path: '/',\n      expires: 5, // number of days or exact date\n      secure: false,\n      httpOnly: false,\n      sameSite: 'strict' // 'strict' for GET and POST, 'lax' only for POST\n    };\n    this.cookie = new app.sys.Cookie(cookieOpts, true);\n\n    this.ifX = false;\n\n    this.cookieForm = new app.sys.Form('cookieF');\n  }\n\n\n  async prerender(trx) {\n    console.log('HOME prerender', trx);\n    // console.log(this.controllers.FormCtrl); // access the specific controller in the controller\n    await this.load.view('header', 'inc/header.html', 'h2 > small', 'sibling');\n    await this.load.view('footer', 'inc/footer.html');\n    await this.load.view('footer2', 'inc/footer2.html', '', 'outer');\n    await this.load.view('footer3', 'inc/footer3.html', '', 'outer');\n    await this.load.view('home1', 'home1.html');\n    await this.load.view('home2', 'home2.html');\n  }\n\n\n  async postrender(trx) {\n    console.log('HOME postrender', trx, this.dataRgs);\n  }\n\n\n  async init(trx) {\n    console.log('HOME init', trx, this.dataRgs);\n    this.product = {\n      name: {\n        x: 'Initial val'\n      },\n      colors: ['red', 'green']\n    };\n    this.rgPrint('product.name.x');\n\n    await this.util.sleep(1300);\n    this.product.name.x = 'Modified val';\n\n    this.limit = 3;\n    this.skip = 2;\n    this.companies = [\n      {name: 'Cloud Ltd', size: 3},\n      {name: 'Roto Ltd', size: 5},\n      {name: 'Zen Ltd', size: 8},\n      {name: 'Den Ltd', size: 9},\n      {name: 'Len Ltd', size: 10},\n      {name: 'Pen Ltd', size: 81},\n      {name: 'Gen Ltd', size: 82},\n      {name: 'Ren Ltd', size: 83}\n    ];\n  }\n\n  destroy(elem, event, dataRgs) {\n    console.log('HOME destroy', elem, event, dataRgs);\n  }\n\n\n\n  async toggleIF() {\n    this.ifX = !this.ifX;\n    console.log('toggleIF::', this.ifX);\n    this.rgIf('ifX');\n  }\n\n\n  runFOR() {\n    this.companies = [\n      {name: 'Cloud2 Ltd', size: 3},\n      {name: 'Roto2 Ltd', size: 5},\n      {name: 'Zen2 Ltd', size: 8},\n      {name: 'Den2 Ltd', size: 81},\n      {name: 'Len2 Ltd', size: 82},\n      {name: 'Pen2 Ltd', size: 83},\n      {name: 'Gen2 Ltd', size: 84},\n      {name: 'Ren2 Ltd', size: 855}\n    ];\n    this.rgFor('companies');\n    this.rgPrint('companies');\n  }\n\n  runREPEAT(num) {\n    this.colors = ['red', 'green', 'blue', 'navy', 'cyan'];\n    this.rgRepeat(num, 'colorID');\n    this.rgSet('colors');\n    this.rgPrint('colors');\n  }\n\n  runCLASS() {\n    this.myKlases = ['my-bold', 'my-italic'];\n    this.rgClass('myKlases');\n  }\n\n  runSTYLE(fontSize, color) {\n    this.myStajl = {fontSize, color};\n    this.rgStyle('myStajl');\n  }\n\n  runSWITCH() {\n    this.myColorArr = ['green2', 'blue2'];\n    this.rgSwitch('myColor'); // this.myColor\n    this.rgSwitch('myColorArr @@ multiple'); // this.myColorArr\n  }\n\n  runELEM() {\n    this.toggle = !this.toggle;\n    if (this.toggle) {\n      this.rgelems.myElem.style.color = 'blue';\n    } else {\n      this.rgelems.myElem.style.color = 'silver';\n    }\n  }\n\n\n  runEVT(elem, evt, boja) {\n    // console.log(elem);\n    // console.log(evt);\n    elem.style.color = boja;\n  }\n\n  runCHANGE() {\n    console.log(this.mySelect);\n    // reset all\n    this.ifs = {\n      one: false,\n      two: false,\n      three:false\n    };\n    this.ifOne = false;\n    this.ifTwo = false;\n    this.ifThree = false;\n\n    // set one\n    switch(this.mySelect) {\n    case 'one': { this.ifs.one = true; break; }\n    case 'two': { this.ifs.two = true; break; }\n    case 'three': { this.ifs.three = true; break; }\n    }\n\n    // render\n    this.rgSwitch('mySelect');\n  }\n\n\n  runCOOKIE() {\n    const cookieVal1 = this.cookieForm.getControl('cookieVal1');\n    const cookieVal2 = this.cookieForm.getControl('cookieVal2');\n    const cookieMethod = this.cookieForm.getControl('cookieMethod');\n    console.log(cookieMethod, ':', cookieVal1, cookieVal2);\n\n    switch(cookieMethod) {\n    case 'put': { this.cookie.put(cookieVal1, cookieVal2); break; }\n    case 'putObject': { this.cookie.putObject('someObj', {x:22,y:'str'}); break; }\n    case 'getAll': { console.log(this.cookie.getAll()); break; }\n    case 'get': { console.log(this.cookie.get(cookieVal1)); break; }\n    case 'getObject': { console.log(this.cookie.getObject('someObj')); break; }\n    case 'remove': { this.cookie.remove(cookieVal1); break; }\n    case 'removeAll': { this.cookie.removeAll(); break; }\n    case 'empty': { this.cookie.empty(cookieVal1); break; }\n    case 'exists': { console.log(this.cookie.exists(cookieVal1)); break; }\n    }\n\n  }\n\n\n\n  clickFja(n, str, ...rest) {\n    console.log('This is a click. Params::', n, str, rest);\n    this.callAPI();\n    if(rest[2]) {\n      const elem = rest[2];\n      elem.style.color = 'red';\n      elem.style.backgroundColor = '#71F5D0';\n    }\n  }\n\n  async callAPI() {\n    const opts = {\n      encodeURI: true,\n      timeout: 10000,\n      retry: 5,\n      retryDelay: 1300,\n      maxRedirects: 0,\n      headers: {\n        'authorization': '',\n        'accept': '*/*', // 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9'\n        'content-type': 'text/html; charset=UTF-8'\n      }\n    };\n    const answer = await this.httpClient.askOnce('api.dex8.com');\n\n    // const answer = await hc.askJSON('https://jsonplaceholder.typicode.com/todos/1', 'GET');\n    // const answer = await hc.askJSON('https://jsonplaceholder.typicode.com/posts?userId=1', 'GET');\n    // const answer = await hc.askJSON('https://jsonplaceholder.typicode.com/posts', 'POST', {title: 'foo', body: 'bar', userId: 1});\n    // const answer = await hc.askJSON('https://jsonplaceholder.typicode.com/posts/1', 'PUT', {id: 1, title: 'foogoo', body: 'barboo', userId: 3});\n    // const answer = await hc.askJSON('https://jsonplaceholder.typicode.com/posts/1', 'DELETE');\n\n    // const answer = await hc.askJSON('https://api.dex8.com?q=my str'); // test encodeURI\n\n    // const answer = await hc.ask('api.dex8.com'); // to test 408 timeout set opts:: timeout:10,retry:5,retryDelay:1300\n\n\n    console.log(answer);\n  }\n\n\n\n  historyData() {\n    console.log('window.history::', window.history);\n  }\n}\n\n\nmodule.exports = IndexCtrl;\n\n},{\"../../../sys\":22}],8:[function(require,module,exports){\nconst { Controller } = require('../../../sys');\n\n\nclass NotfoundCtrl extends Controller {\n\n  init(trx) {\n    console.error(`404 not found: ${trx.uri}`);\n  }\n\n}\n\n\nmodule.exports = NotfoundCtrl;\n\n},{\"../../../sys\":22}],9:[function(require,module,exports){\nconst { Controller, Load } = require('../../../sys');\n\nclass Page1Ctrl extends Controller {\n  constructor(app) {\n    super();\n    console.log('PAGE1 constructor');\n    this.load = app.sys.load;\n  }\n\n  async prerender(trx) {\n    console.log('PAGE1 prerender', trx);\n    $('title').text('PAGE 1');\n\n    // views\n    await this.load.view('header', 'inc/header.html', 'h2 > small', 'append');\n    await this.load.view('footer', 'inc/footer3.html');\n    await this.load.view('home1', 'page1.html', 'h1');\n    await this.load.view('home2', '');\n  }\n\n  init(trx, dataRgs) {\n    console.log('PAGE1 init', trx, dataRgs);\n  }\n\n  destroy(elem, event, dataRgs) {\n    console.log('PAGE1 destroy', elem, event, dataRgs);\n  }\n\n\n\n\n}\n\n\nmodule.exports = Page1Ctrl;\n\n},{\"../../../sys\":22}],10:[function(require,module,exports){\nconst { Controller, Load } = require('../../../sys');\n\n\nclass Page2Ctrl extends Controller {\n  constructor(app) {\n    super();\n    this.load = app.sys.load;\n  }\n\n  init(trx, dataRgs) {\n    console.log('PAGE2 init', trx, dataRgs);\n    $('title').text('PAGE 2');\n  }\n\n}\n\n\n\n\nmodule.exports = Page2Ctrl;\n\n},{\"../../../sys\":22}],11:[function(require,module,exports){\nconst IndexCtrl = require('./IndexCtrl');\nconst Page1Ctrl = require('./Page1Ctrl');\nconst Page2Ctrl = require('./Page2Ctrl');\nconst FormCtrl = require('./FormCtrl');\nconst NotfoundCtrl = require('./NotfoundCtrl');\n\nmodule.exports = [\n  IndexCtrl,\n  Page1Ctrl,\n  Page2Ctrl,\n  FormCtrl,\n  NotfoundCtrl\n];\n\n},{\"./FormCtrl\":6,\"./IndexCtrl\":7,\"./NotfoundCtrl\":8,\"./Page1Ctrl\":9,\"./Page2Ctrl\":10}],12:[function(require,module,exports){\n/**\n * Terminology\n * =================================\n * route :string - defined route in the def() method - /room/subscribe/:room_name/:id\n * routeParsed.full :string - full route (start and end slashes removed) - 'room/subscribe/:room_name/:id'\n * routeParsed.segments :number - number the full route segments (with param parts) - 4\n * routeParsed.base :number - route part without params segments (start and end slashes removed) - 'room/subscribe'\n *\n * uri :string - current URI - /room/subscribe/sasa/123?x=123&y=abc&z=false\n * uriParsed.path :string - complete uri (start and end slashes removed) - '/room/subscribe/sasa/123'\n * uriParsed.segments :number - number of the uri segments - 4\n * uriParsed.queryString :string - uri part after question mark as string - 'x=123&y=abc&z=false'\n * uriParsed.queryObject :object - uri part parsed as object - {x: 123, y: 'abc', z: false}\n *\n * body :any - data sent along with uri as the transitional object - trx: {uri, body}\n *\n * func :Function - route function - a function which is executed when certain route is matched against the uri\n * trx :object - transitional object which can be changed in the route functions, required field is \"uri\" - {uri, body, uriParsed, routeParsed, params, query}\n *\n * Notice\n *-----------\n * Variables \"uri\" and \"body\" are analogous to HTTP POST request, for example:  POST /room/subscribe/sasa/123?key=999  {a: 'something})\n */\n\n\n\nclass Router {\n\n  /**\n   * @param {object} routerOpts - router initial options {debug:boolean}\n   */\n  constructor(routerOpts) {\n    this.routerOpts = routerOpts || {};\n    this.trx; // transitional object {uri:string, body:any, ...}\n    this.routeDefs = []; // route definitions [{route:string, routeParsed:object, funcs:Function[] }]\n  }\n\n\n  /**\n   * Set transitional object.\n   * @param {object} obj - {uri, body, ...}\n   * @returns {void}\n   */\n  set trx(obj) {\n    // required properties\n    if (!obj.uri) { throw new Error('The \"uri\" property is required.'); }\n\n    // \"uri\" and \"body\" as properties with constant value (can not be modified)\n    Object.defineProperty(obj, 'uri', {\n      value: obj.uri,\n      writable: false\n    });\n\n    Object.defineProperty(obj, 'body', {\n      value: obj.body,\n      writable: false\n    });\n\n    // parse uri\n    obj.uriParsed = this._uriParser(obj.uri);\n\n    this._trx = obj;\n  }\n\n\n  /**\n   * Get transitional object.\n   * @returns {object} - {uri, body, ...}\n   */\n  get trx() {\n    return this._trx;\n  }\n\n\n\n  /**\n   * Define route, routeParsed and corresponding functions.\n   * @param {string} route - /room/subscribe/:room_name\n   * @param {Function[]} funcs - route functions\n   * @returns {Router}\n   */\n  def(route, ...funcs) {\n    this.routeDefs.push({\n      route,\n      routeParsed: this._routeParser(route),\n      funcs\n    });\n    return this;\n  }\n\n\n  /**\n   * Redirect from one route to another route.\n   * @param {string} fromRoute - new route\n   * @param {string} toRoute - destination route (where to redirect)\n   * @returns {Router}\n   */\n  redirect(fromRoute, toRoute) {\n    const toRouteDef = this.routeDefs.find(routeDef => routeDef.route === toRoute); // {route, routeParsed, funcs}\n    const toFuncs = !!toRouteDef ? toRouteDef.funcs : [];\n    this.def(fromRoute, ...toFuncs); // assign destination functions to the new route\n    return this;\n  }\n\n\n  /**\n   * Define special route <notfound>\n   * @param {Function[]} funcs - function which will be executed when route is not matched aginst URI\n   * @returns {Router}\n   */\n  notfound(...funcs) {\n    this.def('<notfound>', ...funcs);\n    return this;\n  }\n\n\n\n  /**\n   * Define special route <do>\n   * @param {Function[]} funcs - function which will be executed on every request, e.g. every exe()\n   * @returns {Router}\n   */\n  do(...funcs) {\n    this.def('<do>', ...funcs);\n    return this;\n  }\n\n\n\n\n  /**\n   * Execute the router functions.\n   * @returns {Promise<object>}\n   */\n  async exe() {\n    const uriParsed = this.trx.uriParsed; // shop/register/john/23\n\n    /*** FIND ROUTE ***/\n    // found route definition\n    const routeDef_found = this.routeDefs.find(routeDef => { // {route, routeParsed, funcs}\n      const routeParsed = routeDef.routeParsed; // {full, segments, base}\n      return this._routeRegexMatchNoParams(routeParsed, uriParsed) || this._routeWithParamsMatch(routeParsed, uriParsed);\n    });\n\n    // not found route definition\n    const routeDef_notfound = this.routeDefs.find(routeDef => routeDef.route === '<notfound>');\n\n    // do route definition\n    const routeDef_do = this.routeDefs.find(routeDef => routeDef.route === '<do>');\n\n    /*** EXECUTE FOUND ROUTE FUNCTIONS */\n    if (!!routeDef_found) {\n      this.trx.routeParsed = routeDef_found.routeParsed;\n      this.trx.query = uriParsed.queryObject;\n      this.trx.params = !!this.trx.routeParsed ? this._getParams(routeDef_found.routeParsed.full, uriParsed.path) : {};\n\n      for (const func of routeDef_found.funcs) { await func(this.trx); }\n    } else if (!!routeDef_notfound) {\n      for (const func of routeDef_notfound.funcs) { await func(this.trx); }\n    }\n\n\n    if (!!routeDef_do && !!routeDef_do.funcs && !!routeDef_do.funcs.length) {\n      for (const func of routeDef_do.funcs) { await func(this.trx); }\n    }\n\n\n    return this.trx;\n  }\n\n\n\n\n\n  /*********** ROUTE MATCHES  ***********/\n\n  /**\n   * Route regular expression match against the uri. Parameters are not defined in the route e.g. there is no /: chars.\n   * For example:\n   *       (route) /ads/autos/bmw - (uri) /ads/autos/bmw -> true\n   *       (route) /ads/a.+s/bmw  - (uri) /ads/autos/bmw -> true\n   * @param {object} routeParsed - {full, segments, base}\n   * @param {object} uriParsed - {path, segments, queryString, queryObject}\n   * @returns {boolean}\n   */\n  _routeRegexMatchNoParams(routeParsed, uriParsed) {\n    const routeReg = new RegExp(`^${routeParsed.full}$`, 'i');\n    const tf1 = routeReg.test(uriParsed.path); // route must match uri\n    const tf2 = routeParsed.segments === uriParsed.segments; // route and uri must have same number of segments\n    const tf = tf1 && tf2;\n    if (this.routerOpts.debug) { console.log(`\\n_routeRegexMatchNoParams:: (route) ${routeParsed.full} - (uri) ${uriParsed.path} -> ${tf}`); }\n    return tf;\n  }\n\n\n  /**\n   * Route with parameters match against the uri.\n   * (route) /shop/register/:name/:age - (uri) /shop/register/john/23\n   * @param {object} routeParsed - {full, segments, base}\n   * @param {object} uriParsed - {path, segments, queryString, queryObject}\n   * @returns {boolean}\n   */\n  _routeWithParamsMatch(routeParsed, uriParsed) {\n    const routeReg = new RegExp(`^${routeParsed.base}\\/`, 'i');\n    const tf1 = routeReg.test(uriParsed.path); // route base must match uri\n    const tf2 = routeParsed.segments === uriParsed.segments; // route and uri must have same number of segments\n    const tf3 = /\\/\\:/.test(routeParsed.full); // route must have at least one /:\n    const tf = tf1 && tf2 && tf3;\n    if (this.routerOpts.debug) { console.log(`_routeWithParamsMatch:: (route) ${routeParsed.full} - (uri) ${uriParsed.path} -> ${tf}`); }\n    return tf;\n  }\n\n\n\n\n  /*********** HELPERS  ***********/\n\n  /**\n   * Removing slashes from the beginning and the end.\n   * /ads/autos/bmw/ --> ads/autos/bmw\n   * //ads/autos/bmw/// --> ads/autos/bmw\n   * @param {string} path - uri path or route\n   * @returns {string}\n   */\n  _removeSlashes(path) {\n    return path.trim().replace(/^\\/+/, '').replace(/\\/+$/, '');\n  }\n\n\n  /**\n   * Convert string into integer, float or boolean.\n   * @param {string} value\n   * @returns {string | number | boolean | object}\n   */\n  _typeConvertor(value) {\n    function isJSON(str) {\n      try { JSON.parse(str); }\n      catch(err) { return false; }\n      return true;\n    }\n\n    if (!!value && !isNaN(value) && value.indexOf('.') === -1) { // convert string into integer (12)\n      value = parseInt(value, 10);\n    } else if (!!value && !isNaN(value) && value.indexOf('.') !== -1) { // convert string into float (12.35)\n      value = parseFloat(value);\n    } else if (value === 'true' || value === 'false') { // convert string into boolean (true)\n      value = JSON.parse(value);\n    } else if (isJSON(value)) {\n      value = JSON.parse(value);\n    }\n\n    return value;\n  }\n\n\n\n  /**\n   * Create query object from query string.\n   * @param  {string} queryString - x=abc&y=123&z=true\n   * @return {object}             - {x: 'abc', y: 123, z: true}\n   */\n  _toQueryObject(queryString) {\n    const queryArr = queryString.split('&');\n    const queryObject = {};\n\n    let eqParts, property, value;\n    queryArr.forEach(elem => {\n      eqParts = elem.split('='); // equotion parts\n      property = eqParts[0];\n      value = eqParts[1];\n\n      value = this._typeConvertor(value); // t y p e   c o n v e r s i o n\n\n      queryObject[property] = value;\n    });\n\n    return queryObject;\n  }\n\n\n\n  /**\n   * URI parser\n   * @param  {string} uri - /shop/register/john/23?x=abc&y=123&z=true  (uri === trx.uri)\n   * @returns {path:string, queryString:string, queryObject:object} - {path: 'shop/register/john/23', queryString: 'x=abc&y=123&z=true', queryObject: {x: 'abc', y: 123, z: true}}\n   */\n  _uriParser(uri) {\n    const uriDivided = uri.split('?');\n\n    const path = this._removeSlashes(uriDivided[0]); // /shop/register/john/23 -> shop/register/john/23\n    const segments = path.split('/').length;\n    const queryString = uriDivided[1];\n    const queryObject = !!queryString ? this._toQueryObject(queryString) : {};\n\n    const uriParsed = {path, segments, queryString, queryObject};\n    return uriParsed;\n  }\n\n\n  /**\n   * Route parser.\n   * Converts route string into the parsed object {full, segments, parser} which is used for matching against the URI.\n   * @param  {string} route - /shop/register/:name/:age/\n   * @returns {full:string, segments:number, base:string} - {full: 'shop/register/:name/:age', segments: 4, base: 'shop/register'}\n   */\n  _routeParser(route) {\n    const full = this._removeSlashes(route);\n    const segments = full.split('/').length;\n    const base = full.replace(/\\/\\:.+/, ''); // shop/register/:name/:age --> shop/register\n\n    const routeParsed = {full, segments, base};\n    return routeParsed;\n  }\n\n\n\n  /**\n   * Create parameters object.\n   * For example if route is /register/:name/:age AND uri is /register/john/23 then params is {name: 'john', age: 23}\n   * @param  {string} routeParsedFull - routeParsed.full -- shop/register/:name/:age\n   * @param  {string} uriParsedPath  - uriParsed.path -- shop/register/john/23\n   * @returns {object}\n   */\n  _getParams(routeParsedFull, uriParsedPath) {\n    const routeParts = routeParsedFull.split('/'); // ['shop', 'register', ':name', ':age']\n    const uriParts = uriParsedPath.split('/'); // ['shop', 'register', 'john', 23]\n\n    const params = {};\n\n    routeParts.forEach((routePart, index) => {\n      if (/\\:/.test(routePart)) {\n        const property = routePart.replace(/^\\:/, ''); // remove :\n\n        let value = uriParts[index];\n        value = this._typeConvertor(value); // t y p e   c o n v e r s i o n\n\n        params[property] = value;\n      }\n    });\n\n    return params;\n  }\n\n\n\n\n\n}\n\n\n\n\n// NodeJS\nif (typeof module !== 'undefined') {\n  module.exports = Router;\n}\n\n// Browser\nif (typeof window !== 'undefined') {\n  window.regochRouter = Router;\n}\n\n},{}],13:[function(require,module,exports){\nconst eventEmitter = require('./eventEmitter');\nconst Form = require('./Form');\nconst HTTPClient = require('./HTTPClient');\nconst Load = require('./Load');\nconst Parse = require('./Parse');\nconst router = require('./router');\nconst util = require('./util');\nconst Cookie = require('./Cookie');\n\n\nclass App {\n\n  constructor() {\n    this.CONF = {};\n    this.CONST = {};\n    this.sys = {};\n    this.controllers = {};\n  }\n\n\n  /**\n   * Set configuration.\n   * @param {string} name\n   * @param {any} value\n   */\n  conf(name, value) {\n    if (name === 'app') {\n      const requiredFields = ['baseURL'];\n      const fields = Object.keys(value) || [];\n      for (const requiredField of requiredFields) {\n        if (fields.indexOf(requiredField) === -1) { throw new Error(`The property \"${requiredField}\" is required in the app configuration.`); }\n      }\n    }\n    this.CONF[name] = value;\n    return this;\n  }\n\n\n  /**\n   * Set constants.\n   * @param {string} name\n   * @param {any} value\n   */\n  const(name, value) {\n    this.CONST[name] = value;\n    return this;\n  }\n\n\n  /**\n   * Freeze constant and configuration objects what prevents modifications in the controllers.\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\n   */\n  freeze() {\n    Object.freeze(this.CONF);\n    Object.freeze(this.CONST);\n  }\n\n\n  system(httpClientCnf) {\n    this.sys.eventEmitter = eventEmitter;\n    this.sys.util = util;\n    this.sys.Form = Form;\n    this.sys.HTTPClient = HTTPClient;\n    this.sys.httpClient = new HTTPClient(httpClientCnf);\n    this.sys.load = new Load(this.CONF.app.baseURL, this.sys.httpClient);\n    this.sys.parse = new Parse();\n    this.sys.Cookie = Cookie;\n  }\n\n\n  /**\n   * Create controller instances.\n   * @param  {string[][]} Ctrls\n   */\n  controller(Ctrls) {\n    for(const Ctrl of Ctrls) {\n      this.controllers[Ctrl.name] = new Ctrl(this);\n    }\n    return this;\n  }\n\n\n  /**\n   * Define routes\n   * @param {string[][]} routesCnf\n   */\n  routes(routesCnf) {\n    for (const routeCnf of routesCnf) {\n      const cmd = routeCnf[0]; // 'when', 'notFound'\n\n      if (cmd === 'when') {\n        const route = routeCnf[1]; // '/page1'\n        const ctrlName = routeCnf[2]; // 'Page1Ctrl'\n        const ctrl = this.controllers[ctrlName];\n        router.when(route, ctrl);\n      }\n      else if (cmd === 'notFound') {\n        const ctrlName = routeCnf[1]; // 'Page1Ctrl'\n        const ctrl = this.controllers[ctrlName];\n        router.notFound(ctrl);\n      }\n    }\n    return this;\n  }\n\n\n  /**\n   * Run the app\n   */\n  run() {\n    router.use();\n  }\n\n}\n\n\nmodule.exports = App;\n\n},{\"./Cookie\":15,\"./Form\":16,\"./HTTPClient\":17,\"./Load\":18,\"./Parse\":19,\"./eventEmitter\":21,\"./router\":23,\"./util\":24}],14:[function(require,module,exports){\nconst Parse = require('./Parse');\n\n\nclass Controller extends Parse {\n\n  constructor() {\n    super();\n  }\n\n\n  /************* CONTROLLER LIFECYCLE HOOKS ***********/\n  /**\n   * Run before render of the HTML elements with data-rg-... attribute. (see Router.js)\n   * @param {object} trx - regoch router transitional variable (defined in Router.js::testRoutes())\n   * @returns {Promise<void>}\n   */\n  async prerender(trx) {}\n\n\n  /**\n   * Render the HTML elements with data-rg-... attribute. (see Router.js)\n   * @param {object} trx - regoch router transitional variable (defined in Router.js::testRoutes())\n   * @returns {Promise<void>}\n   */\n  async render(trx) {\n    this.parseListeners();\n    this.parseNonListeners();\n  }\n\n  async parseListeners() {\n    this.rgHref();\n    this.rgClick();\n    this.rgChange();\n    this.rgEvt();\n    this.rgSet();\n  }\n\n  async parseNonListeners() {\n    this.rgPrint();\n    this.rgClass();\n    this.rgStyle();\n    this.rgIf();\n    this.rgSwitch();\n    this.rgFor();\n    this.rgRepeat();\n    this.rgElem();\n  }\n\n\n  /**\n   * Run after render of the HTML elements with data-rg-... attribute. (see Router.js)\n   * @param {object} trx - regoch router transitional variable (defined in Router.js::testRoutes())\n   * @returns {Promise<void>}\n   */\n  async postrender(trx) {}\n\n\n  /**\n   * Init the controller. This is where controller logic starts. (see Router.js)\n   * @param {object} trx - regoch router transitional variable (defined in Router.js::testRoutes())\n   * @returns {Promise<void>}\n   */\n  async init(trx) {}\n\n\n  /**\n   * Destroy the controller when the data-rg-href element is clicked (see parse.href()).\n   * - remove all data-rg-... element lsiteners\n   * * @param {HTMLElement} elem - element with data-rg-href which caused controller destruction\n   * * @param {Event} event - event (usually click) which was applied on the elem and cause controller destruction\n   * @returns {Promise<void>}\n   */\n  async destroy(elem, event) {}\n\n\n\n\n\n  /********** MISC **********/\n  isHtmlLoaded() {\n    document.addEventListener('DOMContentLoaded', () => {\n      console.log('HTML document is loaded.');\n      console.log(document.readyState); // loading, interactive, complete\n    });\n  }\n\n  isLoaded() {\n    window.onload = () => {\n      console.log('HTML document and CSS, JS, images and other resources are loaded.');\n      console.log(document.readyState);\n    };\n  }\n\n\n}\n\nmodule.exports = Controller;\n\n},{\"./Parse\":19}],15:[function(require,module,exports){\n/**\ninterface CookieOpts {\n  domain?: string;\n  path?: string;\n  expires?: number | Date; // number of days or exact date\n  secure?: boolean;\n  httpOnly?: boolean;\n  sameSite?: string; // 'strict' for GET and POST, 'lax' only for POST\n}\n */\n\nclass Cookie {\n\n  /**\n   * @param {CookieOpts} cookieOpts - cookie options\n   * @param {boolean} debug - show debug info\n   */\n  constructor(cookieOpts, debug) {\n    this.cookieOpts = cookieOpts;\n    this.debug = debug;\n  }\n\n\n  /**\n   * Set cookie. Cookie value is string.\n   * @param {string} name - cookie name\n   * @param {string} value - cookie value (string)\n   * @returns {void}\n   */\n  put(name, value) {\n    if (!document) { throw new Error('The document is not available.'); }\n\n    // encoding cookie value\n    const valueStr = encodeURIComponent(value); // a b --> a%20b\n\n    // name=value;\n    let cookieStr = `${name}=${valueStr};`;\n\n    // add cookie options: domain, path, expires, secure, HttpOnly, SameSite\n    cookieStr = this._appendCookieOptions(cookieStr);\n    document.cookie = cookieStr;\n\n    if (this.debug) { console.log('cookie-put():cookieStr: ', cookieStr); }\n  }\n\n\n\n  /**\n   * Set cookie. Cookie value is object.\n   * @param {string} name - cookie name\n   * @param {object} valueObj - cookie value (object)\n   * @returns {void}\n   */\n  putObject(name, valueObj) {\n    if (!document) { throw new Error('The document is not available.'); }\n\n    // convert object to string and encode that string\n    const valueStr = encodeURIComponent(JSON.stringify(valueObj)); // a b --> a%20b\n\n    // name=value;\n    let cookieStr = `${name}=${valueStr};`;\n\n    // add cookie options: domain, path, expires, secure, HttpOnly, SameSite\n    cookieStr = this._appendCookieOptions(cookieStr);\n    document.cookie = cookieStr;\n\n    if (this.debug) { console.log('cookie-putObject(): ', cookieStr); }\n  }\n\n\n\n  /**\n   * Get all cookies in string format (cook1=jedan1; cook2=dva2;).\n   * @returns {string} - example: cook1=jedan1; cook2=dva2;\n   */\n  getAll() {\n    if (!document) { throw new Error('The document is not available.'); }\n    const allCookies = document.cookie; // 'cook1=jedan1; cook2=dva2;'\n    if (this.debug) { console.log('cookie-getAll(): ', allCookies);}\n    return allCookies;\n  }\n\n\n\n  /**\n   * Get a cookie by specific name. Returned value is string.\n   * @param {string} name - cookie name\n   * @returns {string}\n   */\n  get(name) {\n    if (!document) { throw new Error('The document is not available.'); }\n\n    const cookiesArr = this._toCookiesArr(); // [\"authAPIInit1=jedan1\", \"authAPIInit2=dva2\", \"authAPI=\"]\n\n    // extract cookie value for specific name\n    let elemArr, cookieVal;\n    cookiesArr.forEach(elem => {\n      elemArr = elem.split('='); // [\"authAPIInit1\", \"jedan1\"]\n      if (elemArr[0] === name) {\n        cookieVal = elemArr[1];\n      }\n    });\n\n    cookieVal = decodeURIComponent(cookieVal); // a%20b --> a b\n\n    // debug\n    if (this.debug) {\n      console.log('cookie-get()-cookiesArr: ', cookiesArr);\n      console.log('cookie-get()-cookieVal: ', name, '=', cookieVal);\n    }\n\n    return cookieVal;\n  }\n\n\n\n  /**\n   * Get cookie by specific name. Returned value is object.\n   * @param {string} name - cookie name\n   * @returns {object}\n   */\n  getObject(name) {\n    if (!document) { throw new Error('The document is not available.'); }\n\n    const cookieVal = this.get(name); // %7B%22jen%22%3A1%2C%22dva%22%3A%22dvica%22%7D\n\n    // convert cookie string value to object\n    let cookieObj = null;\n    try {\n      if (cookieVal !== 'undefined' && !!cookieVal) {\n        const cookieJson = decodeURIComponent(cookieVal);\n        cookieObj = JSON.parse(cookieJson);\n      }\n    } catch (err) {\n      console.error('cookie-getObject(): ', err);\n    }\n\n    // debug\n    if (this.debug) {\n      console.log('cookie-getObject():cookieVal: ', cookieVal);\n      console.log('cookie-getObject():cookieObj: ', cookieObj);\n    }\n\n    return cookieObj;\n  }\n\n\n\n  /**\n   * Remove cookie by specific name.\n   * @param {string} name - cookie name\n   * @returns {void}\n   */\n  remove(name) {\n    if (!document) { throw new Error('The document is not available.'); }\n    let dateOld = new Date('1970-01-01T01:00:00'); // set expires backward to delete cookie\n    dateOld = dateOld.toUTCString(); // Thu, 01 Jan 1970 00:00:00 GMT\n    document.cookie = `${name}=;expires=${dateOld};path=/;`;\n    if (this.debug) { console.log('cookie-remove(): ', name, ' cookie is deleted.'); }\n  }\n\n\n\n  /**\n   * Remove all cookies.\n   * @returns {void}\n   */\n  removeAll() {\n    if (!document) { throw new Error('The document is not available.'); }\n\n    // set expires backward to delete cookie\n    let dateOld = new Date('1970-01-01T01:00:00'); // set expires backward to delete cookie\n    dateOld = dateOld.toUTCString(); // Thu, 01 Jan 1970 00:00:00 GMT\n\n    // get cookies array\n    const cookiesArr = this._toCookiesArr(); // [\"authAPIInit1=jedan1\", \"authAPIInit2=dva2\", \"authAPI=\"]\n\n    // extract cookie value for specific name\n    let elemArr;\n    const cookiesArr2 = [];\n    cookiesArr.forEach(elem => {\n      elemArr = elem.split('='); // [\"authAPIInit1\", \"jedan1\"]\n      document.cookie = `${elemArr[0]}=;expires=${dateOld};path=/;`;\n      cookiesArr2.push(document.cookie);\n    });\n\n    // debug\n    if (this.debug) {\n      console.log('cookie-removeAll():before:: ', cookiesArr);\n      console.log('cookie-removeAll():after:: ', cookiesArr2);\n    }\n  }\n\n\n\n  /**\n   * Empty cookie value by specific name.\n   * @param {string} name - cookie name\n   * @returns {void}\n   */\n  empty(name) {\n    if (!document) { throw new Error('The document is not available.'); }\n    document.cookie = `${name}=;`; // empty cookie value\n    if (this.debug) { console.log('cookie-empty(): ', name); }\n  }\n\n\n\n  /**\n   * Check if cookie exists.\n   * @param {string} name - cookie name\n   * @return boolean\n   */\n  exists(name) {\n    if (!document) { throw new Error('The document is not available.'); }\n\n    const cookiesArr = this._toCookiesArr(); // [\"authAPIInit1=jedan1\", \"authAPIInit2=dva2\", \"authAPI=\"]\n\n    // extract cookie value for specific name\n    let elemArr, cookieExists = false;\n    cookiesArr.forEach(elem => {\n      elemArr = elem.split('='); // [\"authAPIInit1\", \"jedan1\"]\n      if (elemArr[0] === name) {\n        cookieExists = true;\n      }\n    });\n\n    if (this.debug) { console.log('cookie-exists(): ', cookieExists); }\n\n    return cookieExists;\n  }\n\n\n\n  /******* PRIVATES *******/\n  /**\n   * Add cookie options (domain, path, expires, secure, ...) to the cookie string.\n   * @param {string} cookieStr - cookie string\n   * @returns {string}\n   */\n  _appendCookieOptions(cookieStr) {\n\n    if (!this.cookieOpts) {\n      return cookieStr;\n    }\n\n    // domain=example.com;\n    if (!!this.cookieOpts.domain) {\n      const cDomain = `domain=${this.cookieOpts.domain};`;\n      cookieStr += cDomain;\n    }\n\n    // path=/;\n    if (!!this.cookieOpts.path) {\n      const cPath = `path=${this.cookieOpts.path};`;\n      cookieStr += cPath;\n    }\n\n    // expires=Fri, 3 Aug 2001 20:47:11 UTC;\n    if (!!this.cookieOpts.expires) {\n      let expires;\n      if (typeof this.cookieOpts.expires === 'number') {\n        const d = new Date();\n        d.setTime(d.getTime() + (this.cookieOpts.expires * 24 * 60 * 60 * 1000));\n        expires = d.toUTCString();\n      } else {\n        expires = this.cookieOpts.expires.toUTCString();\n      }\n      const cExpires = `expires=${expires};`;\n\n      cookieStr += cExpires;\n    }\n\n    // secure;\n    if (!!this.cookieOpts.secure) {\n      const cSecure = 'secure;';\n      cookieStr += cSecure;\n    }\n\n    // HttpOnly;\n    if (!!this.cookieOpts.httpOnly) {\n      const cHttpOnly = 'HttpOnly;';\n      cookieStr += cHttpOnly;\n    }\n\n    // SameSite=lax; or SameSite=strict;\n    if (!!this.cookieOpts.sameSite) {\n      const cSameSite = `SameSite=${this.cookieOpts.sameSite};`;\n      cookieStr += cSameSite;\n    }\n\n    return cookieStr;\n  }\n\n\n\n  /**\n   * Get all cookies from document.cookie and convert it in the array format.\n   * authAPIInit1=jedan1; authAPIInit2=dva2; authAPI=  --> [\"authAPIInit1=jedan1\", \"authAPIInit2=dva2\", \"authAPI=\"]\n   * @returns {string[]}\n   */\n  _toCookiesArr() {\n    // fetch all cookies\n    const allCookies = document.cookie; // authAPIInit1=jedan1; authAPIInit2=dva2; authAPI=\n\n    // create cookie array\n    const cookiesArr = allCookies.split(';'); // [\"authAPIInit1=jedan1\", \" authAPIInit2=dva2\", \" authAPI=\"]\n\n    // remove empty spaces from left and right side\n    const cookiesArrMapped = cookiesArr.map(cookiesPair => { // cookiesPair: \" authAPIInit2=dva2\"\n      return cookiesPair.trim();\n    });\n\n    return cookiesArrMapped; // [\"authAPIInit1=jedan1\", \"authAPIInit2=dva2\", \"authAPI=\"]\n  }\n\n\n\n}\n\n\nmodule.exports = Cookie;\n\n},{}],16:[function(require,module,exports){\n/**\n * HTML Form Library\n * According to W3C Standard https://html.spec.whatwg.org/multipage/forms.html\n */\nconst debug = require('./debug');\n\n\n\nclass Form {\n\n  constructor(formName) {\n    this.formName = formName;\n  }\n\n\n  /**\n   * Set the form control value.\n   * @param {string} key - the value of the \"name\" HTML attribute\n   * @param {any|string[]} val - the value\n   */\n  setControl(key, val) {\n    debug('setControl', '--------- setControl ------', 'green', '#A1F8DC');\n    debug('setControl', `${key} = ${val}`, 'green');\n    const elems = document.querySelectorAll(`form[data-rg-form=\"${this.formName}\"] [name=\"${key}\"]`);\n    if (!elems.length) { throw new Error(`Form \"${this.formName}\" doesn't have \"${key}\" control.`); }\n\n    for (const elem of elems) {\n      if (elem.type === 'checkbox') {\n        elem.checked = false;\n        if (val.indexOf(elem.value) !== -1) { elem.checked = true; } // val is array\n      } else if (elem.type === 'select-multiple') {\n        const options = elem; // all options\n        for (const option of options) {\n          option.selected = false;\n          if (val.indexOf(option.value) !== -1) { option.selected = true; }  // val is array\n        }\n      } else if (elem.type === 'radio') {\n        elem.checked = false;\n        if (val === elem.value) { elem.checked = true; }\n      } else {\n        elem.value = val; // val is not array\n      }\n    }\n\n  }\n\n\n  /**\n   * Get the form control value.\n   * @param {string} key - the value of the \"name\" HTML attribute\n   */\n  getControl(key) {\n    debug('getControl', '--------- getControl ------', 'green', '#A1F8DC');\n    const elems = document.querySelectorAll(`form[data-rg-form=\"${this.formName}\"] [name=\"${key}\"]`);\n    if (!elems.length) { throw new Error(`Form \"${this.formName}\" doesn't have \"${key}\" control.`); }\n\n    let val;\n    const valArr = [];\n    let i = 1;\n    for (const elem of elems) {\n      if (elem.type === 'checkbox') {\n        if (elem.checked) { valArr.push(elem.value); val = valArr; }\n        if (i === elems.length && !val) { val = []; }\n      } else if (elem.type === 'select-multiple') {\n        const opts = elem.selectedOptions; // selected options\n        for (const opt of opts) {\n          valArr.push(opt.value);\n          val = valArr;\n        }\n        if (i === elems.length && !val) { val = []; }\n      } else if (elem.type === 'radio') {\n        if (elem.checked) { val = elem.value; }\n      } else if (elem.type === 'number') {\n        val = elem.valueAsNumber;\n      } else {\n        val = elem.value;\n      }\n      i++;\n    }\n\n    debug('getControl', `${val}`, 'green');\n    return val;\n  }\n\n\n  /**\n   * Get the form control value.\n   * @param {string} key - the value of the \"name\" HTML attribute\n   */\n  delControl(key) {\n    debug('delControl', '--------- delControl ------', 'green', '#A1F8DC');\n    debug('delControl', key, 'green');\n    const elems = document.querySelectorAll(`form[data-rg-form=\"${this.formName}\"] [name=\"${key}\"]`);\n    if (!elems.length) { throw new Error(`Form \"${this.formName}\" doesn't have \"${key}\" control.`); }\n\n    for (const elem of elems) {\n      if (elem.type === 'checkbox') {\n        elem.checked = false;\n      } else if (elem.type === 'select-multiple') {\n        const options = elem; // all options\n        for (const option of options) {\n          option.selected = false;\n        }\n      } else if (elem.type === 'radio') {\n        elem.checked = false;\n      } else {\n        elem.value = '';\n      }\n    }\n\n  }\n\n\n\n  /********** MISC *********/\n  /**\n   * Debugger. Use it as debug(var1, var2, var3)\n   * @returns {void}\n   */\n  debugger(tip, text, color, background) {\n    if (this.debug[tip]) { console.log(`%c ${text}`, `color: ${color}; background: ${background}`); }\n  }\n\n\n\n\n\n}\n\nmodule.exports = Form;\n\n},{\"./debug\":20}],17:[function(require,module,exports){\nclass HTTPClient {\n\n  /**\n   * @param {Object} opts - HTTP Client options {encodeURI, timeout, retry, retryDelay, maxRedirects, headers}\n   */\n  constructor(opts) {\n    this.url;\n    this.protocol = 'http:';\n    this.hostname = '';\n    this.port = 80;\n    this.pathname = '/';\n    this.queryString = '';\n\n    if (!opts) {\n      this.opts = {\n        encodeURI: false,\n        timeout: 8000,\n        retry: 3,\n        retryDelay: 5500,\n        maxRedirects: 3,\n        headers: {\n          'authorization': '',\n          'accept': '*/*', // 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9'\n          'content-type': 'text/html; charset=UTF-8'\n        }\n      };\n    } else {\n      this.opts = opts;\n    }\n\n    // default request headers\n    this.headers = this.opts.headers;\n\n    // init the xhr\n    this.xhr = new XMLHttpRequest();\n  }\n\n\n\n  /********** PRIVATES *********/\n\n  /**\n   * Parse url.\n   * @param {String} url - http://www.adsuu.com/some/thing.php?x=2&y=3\n   */\n  _parseUrl(url) {\n    url = this._correctUrl(url);\n    const urlObj  = new URL(url);\n    this.url = url;\n    this.protocol = urlObj.protocol;\n    this.hostname = urlObj.hostname;\n    this.port = urlObj.port;\n    this.pathname = urlObj.pathname;\n    this.queryString = urlObj.search;\n\n    // debug\n    /*\n    console.log('this.url:: ', this.url); // http://localhost:8001/www/products?category=databases\n    console.log('this.protocol:: ', this.protocol); // http:\n    console.log('this.hostname:: ', this.hostname); // localhost\n    console.log('this.port:: ', this.port); // 8001\n    console.log('this.pathname:: ', this.pathname); // /www/products\n    console.log('this.queryString:: ', this.queryString); // ?category=databases\n    */\n\n    return url;\n  }\n\n\n  /**\n   * URL corrections\n   */\n  _correctUrl(url) {\n    if (!url) {throw new Error('URL is not defined'); }\n\n    // 1. trim from left and right\n    url = url.trim();\n\n    // 2. add protocol\n    if (!/^https?:\\/\\//.test(url)) {\n      url = 'http://' + url;\n    }\n\n    // 3. remove multiple empty spaces and insert %20\n    if (this.opts.encodeURI) {\n      url = encodeURI(url);\n    } else {\n      url = url.replace(/\\s+/g, ' ');\n      url = url.replace(/ /g, '%20');\n    }\n\n    return url;\n  }\n\n\n  /**\n   * Beautify error messages.\n   * @param {Error} error - original error\n   * @return formatted error\n   */\n  _formatError(error, url) {\n    // console.log(error);\n    const err = new Error(error);\n\n\n    // reformatting NodeJS errors\n    if (error.code === 'ENOTFOUND') {\n      err.status = 400;\n      err.message = `400 Bad Request [ENOTFOUND] ${url}`;\n    } else {\n      err.status = error.status || 400;\n      err.message = error.message;\n    }\n\n    err.original = error;\n\n    return err; // formatted error is returned\n  }\n\n\n  /**\n   * Get current date/time\n   */\n  _getTime() {\n    const d = new Date();\n    return d.toISOString();\n  }\n\n\n  /**\n   * Get time difference in seconds\n   */\n  _getTimeDiff(start, end) {\n    const ds = new Date(start);\n    const de = new Date(end);\n    return (de.getTime() - ds.getTime()) / 1000;\n  }\n\n\n\n  /********** REQUESTS *********/\n\n  /**\n   * Sending one HTTP request to HTTP server.\n   *  - 301 redirections are not handled.\n   *  - retries are not handled\n   * @param {string} url - https://www.example.com/something?q=15\n   * @param {string} method - GET, POST, PUT, DELETE, PATCH\n   * @param {any} body_obj - http body payload\n   * @returns {Promise<any>}\n   */\n  askOnce(url, method = 'GET', body_obj) {\n\n    // answer (response object)\n    const answer = {\n      requestURL: url,\n      requestMethod: method,\n      status: 0,\n      statusMessage: '',\n      https: false,\n      req: {\n        headers: this.headers,\n        payload: undefined\n      },\n      res: {\n        headers: undefined,\n        content: undefined\n      },\n      time: {\n        req: this._getTime(),\n        res: undefined,\n        duration: undefined\n      }\n    };\n\n\n    // check and correct URL\n    try {\n      url = this._parseUrl(url);\n      answer.requestURL = url;\n      answer.https = /^https/.test(this.protocol);\n    } catch (err) {\n      // if URL is not properly defined\n      const ans = {...answer}; // clone object to prevent overwrite of object properies once promise is resolved\n      ans.status = 400; // client error - Bad Request\n      ans.statusMessage = err.message || 'Bad Request';\n      ans.time.res = this._getTime();\n      ans.time.duration = this._getTimeDiff(ans.time.req, ans.time.res);\n\n      return ans; // send answer and stop further execution\n    }\n\n\n\n    /*** 1) init HTTP request ***/\n    // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/open\n    this.xhr.open(method, url, true, null, null);\n\n    // set the options\n    this.xhr.timeout = this.opts.timeout;\n    Object.keys(this.opts.headers).forEach(prop => this.xhr.setRequestHeader(prop, this.opts.headers[prop]));\n\n    /*** 2) add body to HTTP request ***/\n    if (!!body_obj && !/GET/i.test(method)) {\n      answer.req.payload = body_obj;\n      const body_str = JSON.stringify(body_obj);\n      this.headers['content-length'] = body_str.length;\n    }\n\n    /*** 3) send request to server ***/\n    this.xhr.send();\n\n    /** 4) wait for response */\n    const promise = new Promise ((resolve, reject) => {\n\n      this.xhr.onload = res => {\n        const content = res.target.response;\n\n        // format answer\n        const ans = {...answer}; // clone object to prevent overwrite of object properies once promise is resolved\n        ans.status = this.xhr.status; // 2xx -ok response, 4xx -client error (bad request), 5xx -server error\n        ans.statusMessage = this.xhr.statusText;\n        ans.res.headers = this.getResHeaders();\n        ans.res.content = content;\n        ans.time.res = this._getTime();\n        ans.time.duration = this._getTimeDiff(ans.time.req, ans.time.res);\n\n\n        resolve(ans);\n      };\n\n\n      this.xhr.onerror = error => {\n        this.kill();\n        const err = this._formatError(error, url);\n\n        // format answer\n        const ans = {...answer}; // clone object to prevent overwrite of object properies once promise is resolved\n        ans.status = err.status;\n        ans.statusMessage = err.message;\n        ans.time.res = this._getTime();\n        ans.time.duration = this._getTimeDiff(ans.time.req, ans.time.res);\n\n        // do not resolve if it's already resolved by timeout\n        resolve(ans);\n      };\n\n\n      this.xhr.ontimeout = () => {\n        this.kill();\n\n        // format answer\n        const ans = {...answer}; // clone object to prevent overwrite of object properies once promise is resolved\n        ans.status = 408; // 408 - timeout\n        ans.statusMessage = `Request aborted due to timeout (${this.opts.timeout} ms) ${url} `;\n        ans.time.res = this._getTime();\n        ans.time.duration = this._getTimeDiff(ans.time.req, ans.time.res);\n\n        resolve(ans);\n      };\n\n    });\n\n    return promise;\n\n  }\n\n\n\n  /**\n   * Sending HTTP request to HTTP server.\n   *  - 301 redirections are handled.\n   *  - retries are handled\n   * @param {String} url - https://www.example.com/contact\n   * @param {String} method - GET, POST, PUT, DELETE, PATCH\n   * @param {Object} body_obj - http body\n   */\n  async ask(url, method = 'GET', body_obj) {\n\n    let answer = await this.askOnce(url, method, body_obj);\n    const answers = [answer];\n\n\n    /*** a) HANDLE 3XX REDIRECTS */\n    let redirectCounter = 1;\n\n    while (!!answer && /^3\\d{2}/.test(answer.status) && redirectCounter <= this.opts.maxRedirects) { // 300, 301, 302, ...\n\n      const url_new = new URL(url, answer.res.headers.location); // redirected URL is in 'location' header\n      console.log(`#${redirectCounter} redirection ${answer.status} from ${this.url} to ${url_new}`);\n\n      answer = await this.askOnce(url_new, method, body_obj); // repeat request with new url\n      answers.push(answer);\n\n      redirectCounter++;\n    }\n\n\n\n    /*** b) HANDLE RETRIES when status = 408 timeout */\n    let retryCounter = 1;\n\n    while (answer.status === 408 && retryCounter <= this.opts.retry) {\n      console.log(`#${retryCounter} retry due to timeout (${this.opts.timeout}) on ${url}`);\n      await new Promise(resolve => setTimeout(resolve, this.opts.retryDelay)); // delay before retrial\n\n      answer = await this.askOnce(url, method, body_obj);\n      answers.push(answer);\n\n\n      retryCounter++;\n    }\n\n\n\n    return answers;\n\n  }\n\n\n\n  /**\n   *\n   * @param {string} url - https://api.example.com/someurl\n   * @param {string} method - GET, POST, PUT, DELETE, PATCH\n   * @param {object|string} body - http body as Object or String type\n   * @returns {Promise<string>}\n   */\n  async askJSON(url, method = 'GET', body) {\n\n    // convert body string to object\n    let body_obj = body;\n    if (typeof body === 'string') {\n      try {\n        body_obj = JSON.parse(body);\n      } catch (err) {\n        throw new Error('Body string is not valid JSON.');\n      }\n    }\n\n    // JSON request headers\n    this.setHeaders({\n      'content-type': 'application/json; charset=utf-8',\n      'accept': 'application/json'\n    });\n\n    const answer = await this.askOnce(url, method, body_obj);\n\n    // convert content string to object\n    if (!!answer.res.content) {\n      try {\n        answer.res.content = JSON.parse(answer.res.content);\n      } catch (err) {\n        throw new Error('Response content is not valid JSON.');\n      }\n    }\n\n    return answer;\n\n  }\n\n\n  /**\n   * Get whole HTML file or part marked with css selector.\n   * Notice that returned value is HTML DOM object.\n   * @param {string} url - http://example.com/page.html\n   * @param {string} cssSel - css selector: div>p.alert\n   * @returns {Promise<{dom:DocumentFragment|HTMLElement, str:string}>}\n   */\n  async askHTML(url, cssSel) {\n    const answer = await this.askOnce(url);\n    const range = document.createRange();\n    const frag = range.createContextualFragment(answer.res.content);\n\n    // take part of the HTML\n    let dom;\n    let str = '';\n    if (!cssSel) {\n      dom = frag; // DocumentFragment\n      dom.childNodes.forEach(node => {\n        // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\n        if (node.nodeType === 1) { str += node.outerHTML; }\n        else if (node.nodeType === 3){ str += node.data; }\n      });\n    } else {\n      dom = frag.querySelector(cssSel); // HTMLElement\n      str = dom.outerHTML;\n    }\n\n    answer.res.content = {dom, str};\n    return answer;\n  }\n\n\n\n  /**\n   * Stop the sent request.\n   */\n  kill() {\n    this.xhr.abort();\n  }\n\n\n\n\n\n  /********** HEADERS *********/\n\n  /**\n   * Change header object.\n   * Previously defined this.headers properties will be overwritten.\n   * @param {Object} headerObj - {'authorization', 'user-agent', accept, 'cache-control', 'host', 'accept-encoding', 'connection'}\n   */\n  setHeaders(headerObj) {\n    this.headers = Object.assign(this.headers, headerObj);\n  }\n\n  /**\n   * Set (add/update) header.\n   * Previously defined header will be overwritten.\n   * @param {String} headerName - 'content-type'\n   * @param {String} headerValue - 'text/html; charset=UTF-8'\n   */\n  setHeader(headerName, headerValue) {\n    const headerObj = {[headerName]: headerValue};\n    this.headers = Object.assign(this.headers, headerObj);\n  }\n\n  /**\n   * Change header object.\n   * @param {Array} headerNames - array of header names    ['content-type', 'accept']\n   */\n  delHeaders(headerNames) {\n    headerNames.forEach(headerName => {\n      delete this.headers[headerName];\n    });\n  }\n\n\n  /**\n   * Get request headers\n   */\n  getReqHeaders() {\n    return this.headers;\n  }\n\n\n  /**\n   * Get response headers.\n   */\n  getResHeaders() {\n    const headersStr = this.xhr.getAllResponseHeaders();\n    const headersArr = headersStr.split('\\n');\n    const headersObj = {};\n    headersArr.forEach(headerFull => {\n      const splited = headerFull.split(':');\n      const prop = splited[0];\n      if (prop) {\n        const val = splited[1].trim();\n        headersObj[prop] = val;\n      }\n    });\n    return headersObj;\n  }\n\n\n\n}\n\n\nmodule.exports = HTTPClient;\n\n},{}],18:[function(require,module,exports){\nconst viewsCompiled = require('../app/dist/views/compiled.json');\nconst debug = require('./debug');\n\n\n\nclass Load {\n\n  constructor(baseURL, httpClient) {\n    this.baseURL = baseURL;\n    this.hc = httpClient;\n  }\n\n\n  /**\n   * Load router views. View depends on routes.\n   * @param {string} viewName - view name\n   * @param {string} viewPath - view file path (relative to /view directory)\n   * @param {string} cssSel - CSS selector to load part of the view file\n   * @param {string} dest - destination where to place the view: inner, outer, sibling, prepend, append\n   * @returns\n   */\n  async view(viewName, viewPath, cssSel, dest) {\n    const attrSel = `[data-rg-view=\"${viewName}\"]`;\n\n    // get HTML element\n    const elem = document.querySelector(attrSel);\n    debug('loadView', `--------- loadView ${attrSel} -- ${viewPath} ---------`, '#8B0892', '#EDA1F1');\n    if(debug().loadView) { console.log('elem::', elem); }\n    if (!elem || !viewPath) { return; }\n\n\n\n    // Get HTML content. First try from the compiled JSON and if it doesn't exist then request from the server.\n    let contentStr, contentDOM;\n    if (!!viewsCompiled[viewPath]) { // HTML content from the variable\n      contentStr = viewsCompiled[viewPath];\n\n      // convert HTML string to document-fragment object\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(contentStr, 'text/html');\n      if (!cssSel) {\n        contentDOM = doc; // Document\n      } else {\n        contentDOM = doc.querySelector(cssSel); // HTMLElement\n      }\n\n      debug('loadView', '--from compiled JSON', '#8B0892');\n\n    } else { // HTML content by requesting the server\n      const path = `/views/${viewPath}`;\n      const url = new URL(path, this.baseURL).toString(); // resolve the URL\n      const answer = await this.hc.askHTML(url, cssSel);\n      const content = answer.res.content;\n      if (answer.status !== 200 || !content) { return; }\n\n      // convert answer's content from dom object to string\n      contentStr = answer.res.content.str; // string\n      contentDOM = answer.res.content.dom; // DocumentFragment | HTMLElement|HTMLButtonElement...\n\n      debug('loadView', '--from server', '#8B0892');\n    }\n\n\n    if(debug().loadView) { console.log('contentStr::', contentStr); }\n    if(debug().loadView) { console.log('contentDOM::', contentDOM); }\n\n\n    // load content in the element\n    if (dest === 'inner') {\n      elem.innerHTML = contentStr;\n    } else if (dest === 'outer') {\n      elem.outerHTML = contentStr;\n    } else if (dest === 'sibling') {\n      const parent = elem.parentNode;\n      const sibling = elem.nextSibling;\n      if (sibling.isEqualNode(contentDOM)) { sibling.replaceWith(contentDOM); }\n      else { parent.insertBefore(contentDOM, sibling); }\n    } else if (dest === 'prepend') {\n      const firstChild = elem.firstChild;\n      const emptyNode = document.createTextNode('');\n      if (firstChild.isEqualNode(contentDOM)) { firstChild.replaceWith(emptyNode); }\n      elem.prepend(contentDOM);\n    } else if (dest === 'append') {\n      const lastChild = elem.lastChild;\n      const emptyNode = document.createTextNode('');\n      if (lastChild.isEqualNode(contentDOM)) { lastChild.replaceWith(emptyNode); }\n      elem.append(contentDOM);\n    } else {\n      elem.innerHTML = contentStr;\n    }\n\n    return {elem, contentStr, contentDOM, document};\n  }\n\n\n\n\n}\n\n\n\n\nmodule.exports = Load;\n\n},{\"../app/dist/views/compiled.json\":1,\"./debug\":20}],19:[function(require,module,exports){\nconst eventEmitter = require('./eventEmitter');\nconst debug = require('./debug');\n\n\n\n/**\n * Parse HTML elements with the \"data-rg-\" attribute\n */\nclass Parse {\n\n  constructor() {\n    this.dataRgs = []; // [{attrName, elem, handler}] -- attribute name, element with the data-rg-... attribute and its corresponding handler\n    this.separator = '@@';\n    this.temp = {}; // controller temporary variable (exists untill controller exists)\n  }\n\n  /************************ LISTENERS  ************************/\n\n  /**\n   * Remove all listeners (click, input, ...) from the elements with the \"data-rg-...\" attribute\n   */\n  async rgKILL() {\n    debug('rgKILL', '------- rgKILL -------', 'orange', '#FFD8B6');\n\n    const promises = [];\n    let i = 1;\n    for (const dataRg of this.dataRgs) {\n      dataRg.elem.removeEventListener(dataRg.eventName, dataRg.handler);\n      debug('rgKILL', `${i}. killed:: ${dataRg.attrName} --- ${dataRg.eventName} --- ${dataRg.elem.innerHTML}`, 'orange');\n      promises.push(Promise.resolve(true));\n      i++;\n    }\n\n    await Promise.all(promises);\n    this.dataRgs = [];\n  }\n\n\n\n  /**\n   * data-rg-href\n   * <a href=\"/product/12\" data-rg-href>Product 12</a>\n   * Href listeners and changing URLs (browser history states).\n   * NOTICE: Click on data-rg-href element will destroy the controller.\n   * @returns {void}\n   */\n  rgHref() {\n    debug('rgHref', '--------- rgHref ------', 'orange', '#FFD8B6');\n    const attrName = 'data-rg-href';\n    const elems = document.querySelectorAll(`[${attrName}]`);\n    if (!elems.length) { return; }\n\n    for (const elem of elems) {\n\n      const handler = async event => {\n        event.preventDefault();\n\n        // destroy the current controller and kill the event listeners\n        await this.destroy(elem, event);\n        this.rgKILL();\n\n        // push state and change browser's address bar\n        const href = elem.getAttribute('href').trim();\n        const state = { href };\n        const title = elem.getAttribute(attrName).trim();\n        const url = href; // new URL in the browser's address bar\n        window.history.pushState(state, title, url);\n\n        // fire event and test routes\n        eventEmitter.emit('pushstate', state);\n      };\n\n      elem.addEventListener('click', handler);\n      this.dataRgs.push({attrName, elem, handler, eventName: 'click'});\n      debug('rgHref', `pushed:: ${this.dataRgs.length} -- ${attrName} -- ${elem.localName}`, 'orange');\n\n    }\n  }\n\n\n\n  /**\n   * data-rg-click=\"<function>\"\n   * data-rg-click=\"myFunc()\"\n   * Listen for click and execute the function i.e. controller method.\n   * @returns {void}\n   */\n  rgClick() {\n    debug('rgClick', '--------- rgClick ------', 'orange', '#FFD8B6');\n    const attrName = 'data-rg-click';\n    const elems = document.querySelectorAll(`[${attrName}]`);\n    if (!elems.length) { return; }\n\n    for (const elem of elems) {\n      const funcDef = elem.getAttribute(attrName).trim(); // string 'myFunc(x, y, ...restArgs)'\n      const matched = funcDef.match(/^(.+)\\((.*)\\)$/);\n      const funcName = matched[1]; // function name: myFunc\n\n      const handler = event => {\n        event.preventDefault();\n        try {\n          const funcArgs = this._getFuncArgs(matched[2], elem, event);\n          if (!this[funcName]) { throw new Error(`Method \"${funcName}\" is not defined in the \"${this.constructor.name}\" controller.`); }\n          this[funcName](...funcArgs);\n          debug('rgClick', `${funcName} | ${funcArgs}`, 'orange');\n        } catch (err) {\n          throw new Error(err.message);\n        }\n      };\n\n      elem.addEventListener('click', handler);\n      this.dataRgs.push({attrName, elem, handler, eventName: 'click'});\n      debug('rgClick', `pushed:: ${this.dataRgs.length} -- ${attrName} -- ${funcName}`, 'orange');\n    }\n\n  }\n\n\n  /**\n   * data-rg-change=\"<function>\"\n   * data-rg-change=\"myFunc()\"\n   * Listen for change and execute the function i.e. controller method.\n   * @returns {void}\n   */\n  rgChange() {\n    debug('rgChange', '--------- rgChange ------', 'orange', '#FFD8B6');\n    const attrName = 'data-rg-change';\n    const elems = document.querySelectorAll(`[${attrName}]`);\n    if (!elems.length) { return; }\n\n    for (const elem of elems) {\n      const funcDef = elem.getAttribute(attrName).trim(); // string 'myFunc(x, y, ...restArgs)'\n      const matched = funcDef.match(/^(.+)\\((.*)\\)$/);\n      const funcName = matched[1]; // function name: myFunc\n\n      const handler = event => {\n        event.preventDefault();\n        try {\n          const funcArgs = this._getFuncArgs(matched[2], elem, event);\n          if (!this[funcName]) { throw new Error(`Method \"${funcName}\" is not defined in the \"${this.constructor.name}\" controller.`); }\n          this[funcName](...funcArgs);\n          debug('rgChange', `${funcName} | ${funcArgs}`, 'orange');\n        } catch (err) {\n          throw new Error(err.message);\n        }\n      };\n\n      elem.addEventListener('change', handler);\n      this.dataRgs.push({attrName, elem, handler, eventName: 'change'});\n      debug('rgChange', `pushed:: ${this.dataRgs.length} -- ${attrName} -- ${funcName}`, 'orange');\n    }\n\n  }\n\n\n  /**\n   * data-rg-evt=\"<function>\"\n   * Listen for event and execute the function i.e. controller method.\n   * https://developer.mozilla.org/en-US/docs/Web/API/Element/mouseenter_event\n   * Examples:\n   * data-rg-evt=\"mouseenter @@ myFunc($element, $event, 25, 'some text')\"  - $element and $event are the DOM objects related to the element\n   * @returns {void}\n   */\n  rgEvt() {\n    debug('rgEvt', '--------- rgEvt ------', 'orange', '#FFD8B6');\n    const attrName = 'data-rg-evt';\n    const elems = document.querySelectorAll(`[${attrName}]`);\n    if (!elems.length) { return; }\n\n    for (const elem of elems) {\n      const attrVal = elem.getAttribute(attrName).trim(); // mouseenter @@ runEVT($element, $event, 'red') && mouseleave @@ runEVT($element, $event, 'green')\n      const directives = attrVal.split('&&');\n\n      for (const directive of directives) {\n        const attrValSplited = directive.split(this.separator);\n        if (!attrValSplited[0] || !attrValSplited[1]) { throw new Error(`Attribute \"data-rg-evt\" has bad definition (data-rg-evt=\"${attrVal}\").`); }\n\n        const eventName = attrValSplited[0].trim();\n        const funcDef = attrValSplited[1].trim();\n\n        const matched = funcDef.match(/^(.+)\\((.*)\\)$/);\n        const funcName = matched[1]; // function name: myFunc\n\n        const handler = event => {\n          event.preventDefault();\n          try {\n            const funcArgs = this._getFuncArgs(matched[2], elem, event);\n            if (!this[funcName]) { throw new Error(`Method \"${funcName}\" is not defined in the \"${this.constructor.name}\" controller.`); }\n            this[funcName](...funcArgs);\n            debug('rgEvt', `${funcName} | ${funcArgs}`, 'orange');\n          } catch (err) {\n            throw new Error(err.message);\n          }\n        };\n\n        elem.addEventListener(eventName, handler);\n        this.dataRgs.push({eventName, attrName, elem, handler, eventName});\n        debug('rgEvt', `pushed:: ${this.dataRgs.length} -- ${attrName} -- ${funcName} -- ${eventName}`, 'orange');\n      }\n\n    }\n\n  }\n\n\n\n  /**\n   * data-rg-set=\"<controllerProperty> [@@ print]\"\n   * Parse the \"data-rg-set\" attribute. Sets the controller property in INPUT element.\n   * Examples:\n   * data-rg-set=\"product\" - product is the controller property\n   * data-rg-set=\"product.name\"\n   * data-rg-set=\"product.name @@ print\" -> bind to view directly by calling print() method directly\n   * @returns {void}\n   */\n  rgSet() {\n    debug('rgSet', '--------- rgSet ------', 'navy', '#B6ECFF');\n    const attrName = 'data-rg-set';\n    const elems = document.querySelectorAll(`[${attrName}]`);\n    if (!elems.length) { return; }\n\n    for (const elem of elems) {\n      const attrVal = elem.getAttribute(attrName);\n      const attrValSplited = attrVal.split(this.separator);\n\n      const bindTo = !!attrValSplited[1] ? attrValSplited[1].trim() : ''; // 'print'\n\n      const prop = attrValSplited[0].trim(); // controller property name\n      const propSplitted = prop.split('.'); // company.name\n\n      const handler = event => {\n        // console.log(event);\n        let i = 1;\n        let obj = this;\n        for (const prop of propSplitted) {\n          if (i !== propSplitted.length) { obj[prop] = {}; obj = obj[prop]; }\n          else { obj[prop] = elem.value; }\n          i++;\n        }\n        if (bindTo === 'print') { this.rgPrint(prop); }\n        debug('rgSet', `controller property:: ${prop} = ${obj[prop]}`, 'orange');\n      };\n\n      elem.addEventListener('input', handler);\n      this.dataRgs.push({attrName, elem, handler, eventName: 'input'});\n      debug('rgSet', `pushed::  ${attrName} -- ${elem.localName} --- dataRgs.length: ${this.dataRgs.length}`, 'navy');\n    }\n\n  }\n\n\n\n  /*************** NON LISTENERS *************/\n  /**\n   * data-rg-print=\"<controllerProperty> [@@ inner|outer|sibling|prepend|append]\"\n   * data-rg-print=\"company.name @@ inner\"\n   * Parse the \"data-rg-print\" attribute. Print the controller's property to view.\n   * Examples:\n   * data-rg-print=\"product\" - product is the controller property\n   * data-rg-print=\"product.name @@ outer\"\n   * data-rg-print=\"product.name @@ sibling\"\n   * @param {string} attrvalueProp - part of the attribute value which relates to the controller property,\n   * for example product.name in the data-rg-print=\"product.name @@ inner\". This speed up parsing because it's limited only to one element.\n   * @returns {void}\n   */\n  rgPrint(attrvalueProp) {\n    debug('rgPrint', '--------- rgPrint ------', 'navy', '#B6ECFF');\n\n    // define attribute\n    let attrDef;\n    const attrName = 'data-rg-print';\n    if (!attrvalueProp) {\n      attrDef = attrName;\n    } else {\n      attrDef = `${attrName}^=\"${attrvalueProp}\"`;\n    }\n\n    const elems = document.querySelectorAll(`[${attrDef}]`);\n    debug('rgPrint', `found elements:: ${elems.length}`, 'navy');\n    if (!elems.length) { return; }\n\n    for (const elem of elems) {\n      const attrVal = elem.getAttribute(attrName);\n      const attrValSplited = attrVal.split(this.separator);\n\n      const prop = attrValSplited[0].trim(); // controller property name company.name\n      let val = this._getControllerValue(prop);\n\n      // correct val\n      val = !!val ? val : '';\n      if (typeof val === 'object') { val = JSON.stringify(val); }\n\n      // save temporary initial innerHTML\n      const tempVarName = `${attrName} ${attrVal}`.replace(/\\s/g, '_');\n      if (!this.temp[tempVarName]) { this.temp[tempVarName] = elem.innerHTML; }\n\n\n      // load content in the element\n      let act = attrValSplited[1] || 'inner';\n      act = act.trim();\n      if (act === 'inner') {\n        elem.innerHTML = val;\n      } else if (act === 'outer') {\n        elem.outerHTML = val;\n      } else if (act === 'sibling') {\n        const textNode = document.createTextNode(val);\n        elem.nextSibling.remove();\n        elem.parentNode.insertBefore(textNode, elem.nextSibling);\n      } else if (act === 'prepend') {\n        elem.innerHTML = val + ' ' + this.temp[tempVarName];\n      } else if (act === 'append') {\n        elem.innerHTML = this.temp[tempVarName] + ' ' + val;\n      } else if (act === 'inset') {\n        elem.innerHTML = this.temp[tempVarName].replace('${}', val);\n      } else {\n        elem.innerHTML = val;\n      }\n\n      debug('rgPrint', `${prop}:: ${val} | act::\"${act}\"`, 'navy');\n    }\n  }\n\n\n  /**\n   * data-rg-class=\"<controllerProperty> [@@ add|replace]\"\n   * Parse the \"data-rg-class\" attribute. Set element class attribute.\n   * Examples:\n   * data-rg-class=\"myKlass\" - add new classes to existing classes\n   * data-rg-class=\"myKlass @@ add\" - add new classes to existing classes\n   * data-rg-class=\"myKlass @@ replace\" - replace existing classes with new classes\n   * @param {string} controllerProp - controller property which defines \"class\" attribute\n   * @returns {void}\n   */\n  rgClass(controllerProp) {\n    debug('rgClass', '--------- rgClass ------', 'navy', '#B6ECFF');\n\n    const attrName = 'data-rg-class';\n    let elems = document.querySelectorAll(`[${attrName}]`);\n    if (!!controllerProp) { elems = document.querySelectorAll(`[${attrName}^=\"${controllerProp}\"]`); }\n    debug('rgClass', `found elements:: ${elems.length}`, 'navy');\n    if (!elems.length) { return; }\n\n    for (const elem of elems) {\n      const attrVal = elem.getAttribute(attrName) || ''; // 'controllerProperty'\n      const attrValSplited = attrVal.split(this.separator);\n\n      const ctrlProp = attrValSplited[0].trim();\n      const valArr = this[ctrlProp] || []; // ['my-bold', 'my-italic']\n\n      let act = attrValSplited[1] || '';\n      act = act.trim() || 'add';\n\n      if (act == 'replace') { elem.removeAttribute('class'); }\n      for (const val of valArr) { elem.classList.add(val); }\n\n      debug('rgClass', `data-rg-class=\"${attrVal}\" --- ctrlProp:: ${ctrlProp} | ctrlVal:: ${valArr} | act:: ${act}`, 'navy');\n    }\n\n  }\n\n\n\n  /**\n   * data-rg-style=\"<controllerProperty> [@@ add|replace]\"\n   * Parse the \"data-rg-style\" attribute. Set element style attribute.\n   * Examples:\n   * data-rg-style=\"myStyl\" - add new styles to existing sytles\n   * data-rg-style=\"myStyl @@ add\" - add new styles to existing sytles\n   * data-rg-style=\"myStyl @@ replace\" - replace existing styles with new styles\n   * @param {string} controllerProp - controller property which defines \"style\" attribute\n   * @returns {void}\n   */\n  rgStyle(controllerProp) {\n    debug('rgStyle', '--------- rgStyle ------', 'navy', '#B6ECFF');\n\n    const attrName = 'data-rg-style';\n    let elems = document.querySelectorAll(`[${attrName}]`);\n    if (!!controllerProp) { elems = document.querySelectorAll(`[${attrName}^=\"${controllerProp}\"]`); }\n    debug('rgStyle', `found elements:: ${elems.length}`, 'navy');\n    if (!elems.length) { return; }\n\n    for (const elem of elems) {\n      const attrVal = elem.getAttribute(attrName) || ''; // 'controllerProperty'\n      const attrValSplited = attrVal.split(this.separator);\n\n      const ctrlProp = attrValSplited[0].trim();\n      const valObj = this[ctrlProp] || {}; // {fontSize: '21px', color: 'red'}\n\n      let act = attrValSplited[1] || '';\n      act = act.trim() || 'add';\n\n      if (act == 'replace') { elem.removeAttribute('style'); }\n\n      const styleProps = Object.keys(valObj);\n      for (const styleProp of styleProps) { elem.style[styleProp] = valObj[styleProp]; }\n\n      debug('rgStyle', `data-rg-style=\"${attrVal}\" --- ctrlProp:: \"${ctrlProp}\" | styleProps:: \"${styleProps}\" | act:: \"${act}\"`, 'navy');\n    }\n\n  }\n\n\n\n  /**\n   * data-rg-if=\"<controllerProperty> [@@ hide|remove]\"\n   * Parse the \"data-rg-if\" attribute. Show or hide the HTML element.\n   * Examples:\n   * data-rg-if=\"ifAge\" - hide the element\n   * data-rg-if=\"ifAge @@ hide\" - hide the element\n   * data-rg-if=\"ifAge @@ remove\" - remove the element\n   * @param {string} attrvalue - attribute value (limit parsing to only one HTML element)\n   * @returns {void}\n   */\n  rgIf(attrvalue) {\n    debug('rgIf', '--------- rgIf ------', 'navy', '#B6ECFF');\n\n    // define attribute\n    let attrDef;\n    const attrName = 'data-rg-if';\n    if (!attrvalue) {\n      attrDef = attrName;\n    } else {\n      attrDef = `${attrName}^=\"${attrvalue}\"`;\n    }\n\n    this._uncommentAll();\n\n\n    const elems = document.querySelectorAll(`[${attrDef}]`);\n    debug('rgIf', `found elements:: ${elems.length}`, 'navy');\n    if (!elems.length) { return; }\n\n    for (const elem of elems) {\n      const attrVal = elem.getAttribute(attrName); // ifAge @@ remove\n      const attrValSplited = attrVal.split(this.separator);\n\n      const prop = attrValSplited[0].trim(); // controller property name company.name\n      const propSplitted = prop.split('.'); // ['company', 'name']\n      const prop1 = propSplitted[0]; // company\n      let val = this[prop1]; // controller property value\n      let i = 0;\n      for (const prop of propSplitted) {\n        if (i !== 0 && !!val) { val = val[prop]; }\n        i++;\n      }\n\n      // show or hide element\n      let act = attrValSplited[1] || 'hide'; // hide | remove\n      act = act.trim();\n\n      // set data-rg-ifparent\n      const parent = elem.parentNode;\n      if (act == 'remove') {\n        parent.setAttribute('data-rg-ifparent', '');\n      }\n\n\n      if (act === 'hide') {\n        !!val ? elem.style.visibility = 'visible' : elem.style.visibility = 'hidden'; // elem exists but not visible\n      } else if (act === 'remove') {\n        !!val ? '' : this._commentElement(elem);\n      }\n\n      debug('rgIf', `${prop} = ${val} | act::\"${act}\"`, 'navy');\n    }\n  }\n\n\n\n  /**\n   * data-rg-switch=\"<controllerProperty> [@@ multiple]\"\n   * Parse the \"data-rg-switch\" attribute. Set element style attribute.\n   * Examples:\n   * data-rg-switch=\"ctrlprop\" - ctrlprop is string, number or boolean\n   * data-rg-switch=\"ctrlprop @@ multiple\" - ctrlprop is array of string, number or boolean\n   * Notice @@ multiple can select multiple switchcases.\n   * @param {string} controllerProp - controller property name\n   * @returns {void}\n   */\n  rgSwitch(controllerProp) {\n    debug('rgSwitch', '--------- rgSwitch ------', 'navy', '#B6ECFF');\n\n    const attrName = 'data-rg-switch';\n    let elems = document.querySelectorAll(`[${attrName}]`);\n    if (!!controllerProp) { elems = document.querySelectorAll(`[${attrName}=\"${controllerProp}\"]`); }\n    debug('rgSwitch', `found elements:: ${elems.length}`, 'navy');\n    if (!elems.length) { return; }\n\n    for (const elem of elems) {\n      const attrVal = elem.getAttribute(attrName) || ''; // 'controllerProperty @@ multiple'\n      const attrValSplited = attrVal.split(this.separator);\n\n      const isMultiple = !!attrValSplited[1] ? attrValSplited[1].trim() === 'multiple' : false;\n\n      const ctrlProp = attrValSplited[0].trim();\n      const val = this[ctrlProp] || ''; // string, number, boolean\n\n      // get data-rg-switchcase and data-rg-switchdefault attribute values\n      let switchcaseElems = elem.querySelectorAll('[data-rg-switch] > [data-rg-switchcase]');\n      let switchdefaultElem = elem.querySelector('[data-rg-switch] > [data-rg-switchdefault]');\n\n      // temporary save\n      const tempVarName = `${attrName} ${attrVal}`.replace(/\\s/g, '_');\n      if (!this.temp[tempVarName]) {\n        this.temp[tempVarName] = {switchcaseElems, switchdefaultElem};\n      } else {\n        switchcaseElems = this.temp[tempVarName].switchcaseElems;\n        switchdefaultElem = this.temp[tempVarName].switchdefaultElem;\n      }\n\n      // empty the element with data-rg-switch attribute\n      elem.innerHTML = '';\n\n      // set or delete data-rg-switchcase element\n      let isMatched = false; // is data-rg-switchcase value matched\n      for (const switchcaseElem of switchcaseElems) {\n        let switchcaseAttrVal = switchcaseElem.getAttribute('data-rg-switchcase');\n        switchcaseAttrVal = switchcaseAttrVal.trim();\n        if (!isMultiple && switchcaseAttrVal === val) { elem.innerHTML = switchcaseElem.outerHTML; isMatched = true; }\n        else if (isMultiple && val.indexOf(switchcaseAttrVal) !== -1) { elem.append(switchcaseElem); isMatched = true; }\n        else { switchcaseElem.remove(); }\n        debug('rgSwitch', `data-rg-switch=\"${attrVal}\" data-rg-switchcase=\"${switchcaseAttrVal}\" --- val:: \"${val}\"`, 'navy');\n      }\n\n      if (!isMatched && !!switchdefaultElem) { elem.innerHTML = switchdefaultElem.outerHTML; }\n\n    }\n\n  }\n\n\n\n  /**\n   * data-rg-for=\"<propArr>[:limit:skip] [@@ outer|inner]\"\n   * Parse the \"data-rg-for\" attribute. Multiply element.\n   * Examples:\n   * data-rg-for=\"companies\"\n   * data-rg-for=\"company.employers\"\n   * @param {string} attrvalue - attribute value (limit parsing to only one HTML element)\n   * @returns {void}\n   */\n  rgFor(attrvalue) {\n    debug('rgFor', '--------- rgFor ------', 'navy', '#B6ECFF');\n\n    // define attribute\n    let attrDef;\n    const attrName = 'data-rg-for';\n    if (!attrvalue) {\n      attrDef = attrName;\n    } else {\n      attrDef = `${attrName}^=\"${attrvalue}\"`;\n    }\n\n    const elems = document.querySelectorAll(`[${attrDef}]`);\n    debug('rgFor', `found elements:: ${elems.length}`, 'navy');\n    if (!elems.length) { return; }\n\n    for (const elem of elems) {\n      const attrVal = elem.getAttribute(attrName); // company.employers\n      const attrValSplited = attrVal.split(this.separator);\n\n      const propLimSkp = attrValSplited[0].trim(); // company.employers:limit:skip\n      const propLimSkpSplited = propLimSkp.split(':');\n\n      let limitName = propLimSkpSplited[1]; // limit variable name\n      limitName = !!limitName ? limitName.trim() : '';\n      const limit = +this[limitName] || 1000;\n\n      let skipName = propLimSkpSplited[2]; // skip variable name\n      skipName = !!skipName ? skipName.trim() : '';\n      const skip = +this[skipName] || 0;\n\n\n      let prop = propLimSkpSplited[0];\n      prop = prop.trim();\n      const val = this._getControllerValue(prop);\n      if(debug().rgFor) { console.log('val::', val, ' limit::', limit, ' skip::', skip); }\n      if (!val) { return; }\n\n      const max = skip + limit < val.length ? skip + limit : val.length;\n\n\n      // save temporary initial innerHTML and outerHTML\n      const tempVarName = `${attrName} ${attrVal}`.replace(/\\s/g, '_');\n      if (!this.temp[tempVarName]) {\n        this.temp[tempVarName] = elem.innerHTML;\n      }\n\n\n      let act = attrValSplited[1] || 'outer'; // outer|inner\n      act = act.trim();\n\n      if (act === 'outer') {\n        // hide the original (reference) element\n        elem.style.visibility = 'hidden';\n        elem.innerHTML = '';\n\n        // remove generated data-rg-for elements, i.e. elements with the data-rg-for-gen attribute\n        const genElems = document.querySelectorAll(`[data-rg-for-gen=\"${attrVal}\"]`);\n        for (const genElem of genElems) { genElem.remove(); }\n\n        // multiply element by cloning and adding sibling elements\n        for (let i = skip; i < max; i++) {\n          const j = max - 1 - i + skip;\n          const innerHTML = this._parse$i(j, this.temp[tempVarName]); // replace .$i or $i+1 , $i-1, $i^1, ...\n          const newElem = elem.cloneNode();\n          newElem.innerHTML = innerHTML;\n          newElem.style.visibility = '';\n          newElem.removeAttribute('data-rg-for');\n          newElem.setAttribute('data-rg-for-gen', attrVal);\n          elem.parentNode.insertBefore(newElem, elem.nextSibling);\n        }\n\n      } else if (act === 'inner') {\n\n        // multiply the innerHTML in the data-rg-for-gen element\n        elem.innerHTML = '';\n        for (let i = skip; i < max; i++) {\n          elem.innerHTML += this._parse$i(i, this.temp[tempVarName]); // replace .$i or $i+1 , $i-1, $i^1, ...;\n        }\n\n      }\n\n      debug('rgFor', `act:: ${act}`, 'navy');\n\n    }\n\n  }\n\n\n\n  /**\n   * data-rg-repeat=\"<number>\"\n   * Parse the \"data-rg-repeat\" attribute. Repeat the element n times.\n   * Examples:\n   * data-rg-repeat=\"10\"\n   * @param {number} num - number of iterations\n   * @param {string} id - element's id, for example <p id=\"myID\" data-rg-repeat=\"5\">\n   * @returns {void}\n   */\n  rgRepeat(num, id) {\n    debug('rgRepeat', '--------- rgRepeat ------', 'navy', '#B6ECFF');\n\n    const attrName = 'data-rg-repeat';\n    let elems = document.querySelectorAll(`[${attrName}]`);\n    if (!!id) { elems = document.querySelectorAll(`#${id}[${attrName}]`); }\n    debug('rgRepeat', `found elements:: ${elems.length}`, 'navy');\n    if (!elems.length) { return; }\n\n    for (const elem of elems) {\n      const attrVal = elem.getAttribute(attrName); // '10 @@ #comp'\n      const max = +num || +attrVal.trim();\n\n      // save temporary initial innerHTML and outerHTML\n      const tempVarName = `${attrName} ${attrVal}`.replace(/\\s/g, '_');\n      if (!this.temp[tempVarName]) {\n        this.temp[tempVarName] = elem.innerHTML;\n      }\n\n      // hide the original (reference) element\n      elem.style.visibility = 'hidden';\n      elem.innerHTML = '';\n\n      // remove generated data-rg-for elements, i.e. elements with the data-rg-for-gen attribute\n      const genElems = document.querySelectorAll(`[data-rg-repeat-gen=\"${attrVal}\"]`);\n      for (const genElem of genElems) { genElem.remove(); }\n\n      // multiply element by cloning and adding sibling elements\n      for (let i = 0; i < max; i++) {\n        const j = max - 1 - i;\n        const innerHTML = this._parse$i(j, this.temp[tempVarName]); // replace .$i or $i+1 , $i-1, $i^1, ...\n        const newElem = elem.cloneNode();\n        newElem.innerHTML = innerHTML;\n        newElem.style.visibility = '';\n        newElem.removeAttribute('id');\n        newElem.removeAttribute('data-rg-repeat');\n        newElem.setAttribute('data-rg-repeat-gen', attrVal);\n        elem.parentNode.insertBefore(newElem, elem.nextSibling);\n      }\n\n      debug('rgRepeat', `max:: ${max}, id: ${id}`, 'navy');\n\n    }\n  }\n\n\n\n  /**\n   * data-rg-elem=\"<rgelemsProp>\"\n   * Parse the \"data-rg-elem\" attribute. Transfer the DOM element to the controller property \"this.rgelems\".\n   * Examples:\n   * data-rg-elem=\"paragraf\" -> fetch it with this.rgelems['paragraf']\n   * @returns {void}\n   */\n  rgElem() {\n    debug('rgElem', '--------- rgElem ------', 'navy', '#B6ECFF');\n\n    const attrName = 'data-rg-elem';\n    const elems = document.querySelectorAll(`[${attrName}]`);\n    debug('rgElem', `found elements:: ${elems.length}`, 'navy');\n    if (!elems.length) { return; }\n\n    // init the this.elems\n    if (!this.rgelems) { this.rgelems = {}; }\n\n    // associate values\n    for (const elem of elems) {\n      const attrVal = elem.getAttribute(attrName) || ''; // 'paragraf'\n      this.rgelems[attrVal] = elem;\n    }\n\n  }\n\n\n\n\n\n\n\n  /************ PRIVATES **********/\n  /**\n   * Get the controller property's value.\n   * For example controller's property is this.company.name\n   * @param {string} prop - controller property name, for example: company.name\n   * @returns {any}\n   */\n  _getControllerValue(prop) {\n    const propSplitted = prop.split('.'); // ['company', 'name']\n    const prop1 = propSplitted[0]; // company\n    let val = this[prop1]; // controller property value\n    let i = 0;\n    for (const prop of propSplitted) {\n      if (i !== 0 && !!val) { val = val[prop]; }\n      i++;\n    }\n    return val;\n  }\n\n\n  /**\n   * Parse iteration variable $i in the text.\n   * - replace .$i with the number i\n   * - replace $i, $i+1 , $i-1, $i^1, ...\n   * @param {number} i - number to replace $i with\n   * @param {string} txt - text which needs to be replaced\n   * @returns {string}\n   */\n  _parse$i(i, txt) {\n    const txt2 = txt.replace(/\\.\\$i/g, `.${i}`)\n      .replace(/\\$i\\s*(\\+|\\-|\\*|\\/|\\%|\\^)?\\s*(\\d+)?/g, (match, $1, $2) => {\n        let result = i;\n        const n = parseInt($2, 10);\n        if ($1 === '+') { result = i + n; }\n        else if ($1 === '-') { result = i - n; }\n        else if ($1 === '*') { result = i * n; }\n        else if ($1 === '/') { result = i / n; }\n        else if ($1 === '%') { result = i % n; }\n        else if ($1 === '^') { result = Math.pow(i, n); }\n        return result;\n      });\n    return txt2;\n  }\n\n\n  /**\n   * Create and clean function arguments\n   * @param {string[]} args - array of function arguments: [x,y,...restArgs]\n   * @param {HTMLElement} elem - HTML element on which is the event applied\n   * @param {Event} event - applied event\n   * @returns {string[]}\n   */\n  _getFuncArgs(args, elem, event) {\n    const funcArgs = args\n      .split(',')\n      .map(arg => {\n        arg = arg.trim().replace(/\\'|\\\"/g, '');\n        if (arg === '$element') { arg = elem; }\n        if (arg === '$event') { arg = event; }\n        return arg;\n      });\n    return funcArgs;\n  }\n\n\n  /**\n   * Wrap element in the comment.\n   * @param {Element} elem - HTML element DOM object\n   * @returns {void}\n   */\n  _commentElement(elem) {\n    const comment = document.createComment(elem.outerHTML); // define comment\n    elem.parentNode.insertBefore(comment, elem); // insert comment above elem\n    elem.remove();\n  }\n\n\n  /**\n   * Remove the comment from the element.\n   * @returns {void}\n   */\n  _uncommentAll() {\n    const ifParentElems = document.querySelectorAll(`[data-rg-ifparent]`);\n    const parser = new DOMParser();\n    for (const ifParentElem of ifParentElems) {\n      console.log('ifParentElem.childNodes::', ifParentElem.childNodes);\n      for (const child of ifParentElem.childNodes) {\n        const elemStr = child.nodeValue; // <p data-rg-if=\"ifX @@ remove\">company name</p>\n        if (child.nodeType === 8 && /data-rg-if/.test(elemStr)) { // 8 is comment https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\n          const doc = parser.parseFromString(elemStr, 'text/html');\n          const elem = doc.querySelector('[data-rg-if');\n          console.log(ifParentElem, child, elem);\n          if (!!elem) {\n            ifParentElem.insertBefore(elem, child);\n            child.remove();\n          }\n        }\n      }\n    }\n  }\n\n\n}\n\n\nmodule.exports = Parse;\n\n},{\"./debug\":20,\"./eventEmitter\":21}],20:[function(require,module,exports){\nmodule.exports = (tip, text, color, background) => {\n  const debugOpts = {\n    // Parse.js\n    rgKILL: false,\n    rgHref: false,\n    rgClick: false,\n    rgChange: false,\n    rgEvt: false,\n    rgSet: false,\n\n    rgPrint: false,\n    rgClass: false,\n    rgStyle: false,\n    rgIf: true,\n    rgSwitch: false,\n    rgFor: false,\n    rgRepeat: false,\n    rgElem: false,\n\n    // Load.js\n    loadView: false,\n\n    // Form.js\n    setControl: false,\n    getControl: false,\n    delControl: false\n  };\n\n  if (debugOpts[tip]) { console.log(`%c ${text}`, `color: ${color}; background: ${background}`); }\n\n  return debugOpts;\n};\n\n},{}],21:[function(require,module,exports){\nclass EventEmitter {\n\n  /**\n   * Create and emit the event\n   * @param {string} eventName - event name, for example: 'pushstate'\n   * @param {any} detail - event argument\n   * @returns {void}\n   */\n  emit(eventName, detail) {\n    const evt = new CustomEvent(eventName, {detail});\n    window.dispatchEvent(evt);\n  }\n\n\n  /**\n   * Listen for the event\n   * @param {string} eventName - event name, for example: 'pushstate'\n   * @param {Function} listener - callback function with event parameter\n   * @returns {void}\n   */\n  on(eventName, listener) {\n    window.addEventListener(eventName, event => {\n      listener(event);\n    });\n  }\n\n\n  /**\n   * Listen for the event only once\n   * @param {string} eventName - event name, for example: 'pushstate'\n   * @param {Function} listener - callback function with event parameter\n   * @returns {void}\n   */\n  once(eventName, listener) {\n    window.addEventListener(eventName, event => {\n      listener(event);\n      window.removeEventListener(eventName, () => {});\n    }, {once: true});\n  }\n\n\n  /**\n   * Stop listening the event\n   * @param {string} eventName - event name, for example: 'pushstate'\n   * @returns {void}\n   */\n  off(eventName) {\n    window.removeEventListener(eventName, event => {});\n  }\n\n\n\n}\n\n\nmodule.exports = new EventEmitter();\n\n},{}],22:[function(require,module,exports){\nconst App = require('./App');\nconst Controller = require('./Controller');\n\n\n\nmodule.exports = {\n  App,\n  Controller\n};\n\n},{\"./App\":13,\"./Controller\":14}],23:[function(require,module,exports){\nconst RegochRouter = require('regoch-router');\nconst eventEmitter = require('./eventEmitter');\n\n\n\nclass Router {\n\n  constructor() {\n    this.regochRouter = new RegochRouter({debug: false});\n  }\n\n\n  /**\n   * Define route\n   * @param {string} route - route, for example: '/page1.html'\n   * @param {object} Ctrl - route controller instance\n   * @returns {void}\n   */\n  when(route, ctrl) {\n    if (!route) { throw new Error(`Route is not defined for ${ctrl.constructor.name} controller.`); }\n\n    // controller methods\n    const prerender = ctrl.prerender.bind(ctrl);\n    const render = ctrl.render.bind(ctrl);\n    const postrender = ctrl.postrender.bind(ctrl);\n    const init = ctrl.init.bind(ctrl);\n\n    this.regochRouter.def(route, prerender, render, postrender, init);\n  }\n\n\n  /**\n   * Define 404 not found route\n   * @param {object} ctrl - route controller instance\n   * @returns {void}\n   */\n  notFound(ctrl) {\n    // controller methods\n    const prerender = ctrl.prerender.bind(ctrl);\n    const render = ctrl.render.bind(ctrl);\n    const postrender = ctrl.postrender.bind(ctrl);\n    const init = ctrl.init.bind(ctrl);\n\n    this.regochRouter.notfound(prerender, render, postrender, init);\n  }\n\n\n  /**\n   * Match routes against current browser URI.\n   * @param {string} uri - browser's address bar URI\n   * @returns {void}\n   */\n  testRoutes(uri) {\n    this.regochRouter.trx = { uri };\n    this.regochRouter.exe()\n      // .then(trx => console.log('Route executed trx:: ', trx))\n      .catch(err => console.error('ERRrouter:: ', err));\n  }\n\n\n  use() {\n    // test URI against routes when browser's Reload button is clicked\n    const uri = window.location.pathname + window.location.search; // /page1.html?q=12\n    this.testRoutes(uri);\n\n    // test URI against routes when element with data-rg-hrf attribute is clicked\n    eventEmitter.on('pushstate', event => {\n      const uri = window.location.pathname + window.location.search; // browser address bar URL\n      // console.log(uri, event.detail.href);\n      this.testRoutes(uri);\n    });\n  }\n\n\n\n}\n\n\n\n\n\nmodule.exports = new Router();\n\n},{\"./eventEmitter\":21,\"regoch-router\":12}],24:[function(require,module,exports){\nclass Util {\n\n  /**\n   * Time delay\n   * @param {number} ms - miliseconds\n   * @returns {Promise<void>}\n   */\n  sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n\n}\n\n\nmodule.exports = new Util();\n\n},{}]},{},[2]);\n"],"file":"app-min.js"}